[
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nvoid lkjhgfdsaz()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        fscanf (stdin, \"%c\", &data);\n    }\n    if(staticTrue)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    lkjhgfdsaz();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nstatic void xkzjvbnmwe()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        fscanf (stdin, \"%c\", &data);\n    }\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data < CHAR_MAX)\n        {\n            char result = data + 1;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void qwertyuiop()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        fscanf (stdin, \"%c\", &data);\n    }\n    if(staticTrue)\n    {\n        if (data < CHAR_MAX)\n        {\n            char result = data + 1;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void asdfghjklz()\n{\n    char data;\n    data = ' ';\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nvoid poiuytrewq()\n{\n    xkzjvbnmwe();\n    qwertyuiop();\n    asdfghjklz();\n    zxcvbnmwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__char_fscanf_add_05_good.c",
            "filename_bad": "CWE190_Integer_Overflow__char_fscanf_add_05_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nstatic void xkzjvbnmwe()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        fscanf (stdin, \"%c\", &data);\n    }\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data < CHAR_MAX)\n        {\n            char result = data + 1;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void qwertyuiop()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        fscanf (stdin, \"%c\", &data);\n    }\n    if(staticTrue)\n    {\n        if (data < CHAR_MAX)\n        {\n            char result = data + 1;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void asdfghjklz()\n{\n    char data;\n    data = ' ';\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nvoid poiuytrewq()\n{\n    xkzjvbnmwe();\n    qwertyuiop();\n    asdfghjklz();\n    zxcvbnmwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nvoid poiuytrewq()\n{\n    char data;\n    data = ' ';\n    goto source;\nsource:\n    fscanf (stdin, \"%c\", &data);\n    goto sink;\nsink:\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic void xkzjvbnmwe()\n{\n    char data;\n    data = ' ';\n    goto source;\nsource:\n    fscanf (stdin, \"%c\", &data);\n    goto sink;\nsink:\n    if (data < CHAR_MAX)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n    else\n    {\n        printLine(\"\");\n    }\n}\n\nstatic void qwertyuiop()\n{\n    char data;\n    data = ' ';\n    goto source;\nsource:\n    data = 2;\n    goto sink;\nsink:\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nvoid asdfghjklz()\n{\n    xkzjvbnmwe();\n    qwertyuiop();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklz();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__char_fscanf_add_18_good.c",
            "filename_bad": "CWE190_Integer_Overflow__char_fscanf_add_18_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic void xkzjvbnmwe()\n{\n    char data;\n    data = ' ';\n    goto source;\nsource:\n    fscanf (stdin, \"%c\", &data);\n    goto sink;\nsink:\n    if (data < CHAR_MAX)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n    else\n    {\n        printLine(\"\");\n    }\n}\n\nstatic void qwertyuiop()\n{\n    char data;\n    data = ' ';\n    goto source;\nsource:\n    data = 2;\n    goto sink;\nsink:\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n}\n\nvoid asdfghjklz()\n{\n    xkzjvbnmwe();\n    qwertyuiop();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklz();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nstatic char badData;\n\nstatic void asdfghjklq()\n{\n    char data = badData;\n    char result = data + 1;\n    printHexCharLine(result);\n}\n\nvoid zxcvbnmasd()\n{\n    char data;\n    data = ' ';\n    data = (char)RAND32();\n    badData = data;\n    asdfghjklq();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic char goodG2BData;\nstatic char goodB2GData;\n\nstatic void xkfjweiruo()\n{\n    char data = goodG2BData;\n    char result = data + 1;\n    printHexCharLine(result);\n}\n\nstatic void qweoirjlkj()\n{\n    char data;\n    data = ' ';\n    data = 2;\n    goodG2BData = data;\n    xkfjweiruo();\n}\n\nstatic void asdflkjwer()\n{\n    char data = goodB2GData;\n    if (data < CHAR_MAX)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n    else\n    {\n        printLine(\"\");\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char data;\n    data = ' ';\n    data = (char)RAND32();\n    goodB2GData = data;\n    asdflkjwer();\n}\n\nvoid qwertyuiop()\n{\n    qweoirjlkj();\n    zxcvbnmwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__char_rand_add_45_good.c",
            "filename_bad": "CWE190_Integer_Overflow__char_rand_add_45_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic char goodG2BData;\nstatic char goodB2GData;\n\nstatic void xkfjweiruo()\n{\n    char data = goodG2BData;\n    char result = data + 1;\n    printHexCharLine(result);\n}\n\nstatic void qweoirjlkj()\n{\n    char data;\n    data = ' ';\n    data = 2;\n    goodG2BData = data;\n    xkfjweiruo();\n}\n\nstatic void asdflkjwer()\n{\n    char data = goodB2GData;\n    if (data < CHAR_MAX)\n    {\n        char result = data + 1;\n        printHexCharLine(result);\n    }\n    else\n    {\n        printLine(\"\");\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char data;\n    data = ' ';\n    data = (char)RAND32();\n    goodB2GData = data;\n    asdflkjwer();\n}\n\nvoid qwertyuiop()\n{\n    qweoirjlkj();\n    zxcvbnmwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nstatic void lkjhgfdsaz(char data)\n{\n    if(data > 0)\n    {\n        char result = data * 2;\n        printHexCharLine(result);\n    }\n}\n\nvoid mnbvcxzlkj()\n{\n    char data;\n    void (*funcPtr) (char) = lkjhgfdsaz;\n    data = ' ';\n    data = (char)RAND32();\n    funcPtr(data);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    mnbvcxzlkj();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic void xkfjwqzvbn(char data)\n{\n    if(data > 0)\n    {\n        char result = data * 2;\n        printHexCharLine(result);\n    }\n}\n\nstatic void qwertyuiop()\n{\n    char data;\n    void (*funcPtr) (char) = xkfjwqzvbn;\n    data = ' ';\n    data = 2;\n    funcPtr(data);\n}\n\nstatic void asdfghjklz(char data)\n{\n    if(data > 0)\n    {\n        if (data < (CHAR_MAX/2))\n        {\n            char result = data * 2;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char data;\n    void (*funcPtr) (char) = asdfghjklz;\n    data = ' ';\n    data = (char)RAND32();\n    funcPtr(data);\n}\n\nvoid poiuytrewq()\n{\n    qwertyuiop();\n    zxcvbnmwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__char_rand_multiply_44_good.c",
            "filename_bad": "CWE190_Integer_Overflow__char_rand_multiply_44_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic void xkfjwqzvbn(char data)\n{\n    if(data > 0)\n    {\n        char result = data * 2;\n        printHexCharLine(result);\n    }\n}\n\nstatic void qwertyuiop()\n{\n    char data;\n    void (*funcPtr) (char) = xkfjwqzvbn;\n    data = ' ';\n    data = 2;\n    funcPtr(data);\n}\n\nstatic void asdfghjklz(char data)\n{\n    if(data > 0)\n    {\n        if (data < (CHAR_MAX/2))\n        {\n            char result = data * 2;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char data;\n    void (*funcPtr) (char) = asdfghjklz;\n    data = ' ';\n    data = (char)RAND32();\n    funcPtr(data);\n}\n\nvoid poiuytrewq()\n{\n    qwertyuiop();\n    zxcvbnmwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <math.h>\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nvoid qwejrlkfjw()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = (char)RAND32();\n    }\n    if(staticTrue)\n    {\n        char result = data * data;\n        printHexCharLine(result);\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejrlkfjw();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <math.h>\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nvoid xkfjwejflk()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = (char)RAND32();\n    }\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (abs((long)data) <= (long)sqrt((double)CHAR_MAX))\n        {\n            char result = data * data;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = (char)RAND32();\n    }\n    if(staticTrue)\n    {\n        if (abs((long)data) <= (long)sqrt((double)CHAR_MAX))\n        {\n            char result = data * data;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    char data;\n    data = ' ';\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data * data;\n        printHexCharLine(result);\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data * data;\n        printHexCharLine(result);\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    xkfjwejflk();\n    qwejrlkfjw();\n    qwejrlkfjw();\n    qwejrlkfjw();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejrlkfjw();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__char_rand_square_05_good.c",
            "filename_bad": "CWE190_Integer_Overflow__char_rand_square_05_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <math.h>\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nvoid xkfjwejflk()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = (char)RAND32();\n    }\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (abs((long)data) <= (long)sqrt((double)CHAR_MAX))\n        {\n            char result = data * data;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = (char)RAND32();\n    }\n    if(staticTrue)\n    {\n        if (abs((long)data) <= (long)sqrt((double)CHAR_MAX))\n        {\n            char result = data * data;\n            printHexCharLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    char data;\n    data = ' ';\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data * data;\n        printHexCharLine(result);\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    char data;\n    data = ' ';\n    if(staticTrue)\n    {\n        data = 2;\n    }\n    if(staticTrue)\n    {\n        char result = data * data;\n        printHexCharLine(result);\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    xkfjwejflk();\n    qwejrlkfjw();\n    qwejrlkfjw();\n    qwejrlkfjw();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejrlkfjw();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <map>\n\nusing namespace std;\n\nnamespace poiuytrewq\n{\n\nvoid badSink(map<int, int64_t> dataMap);\n\nvoid eFgHiJkLmN()\n{\n    int64_t data;\n    map<int, int64_t> dataMap;\n    data = 0LL;\n    fscanf (stdin, \"%lld\", &data);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    badSink(dataMap);\n}\n\n} /* close namespace */\n\nusing namespace poiuytrewq;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    eFgHiJkLmN();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <map>\n\nusing namespace std;\n\nnamespace zxcvbnmasd\n{\n\nvoid goodG2BSink(map<int, int64_t> dataMap);\n\nstatic void aBcDeFgHiJ()\n{\n    int64_t data;\n    map<int, int64_t> dataMap;\n    data = 0LL;\n    data = 2;\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    goodG2BSink(dataMap);\n}\n\nvoid goodB2GSink(map<int, int64_t> dataMap);\n\nstatic void kLmNoPqRsT()\n{\n    int64_t data;\n    map<int, int64_t> dataMap;\n    data = 0LL;\n    fscanf (stdin, \"%lld\", &data);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    goodB2GSink(dataMap);\n}\n\nvoid uVwXyZaBcD()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n}\n\n} /* close namespace */\n\nusing namespace zxcvbnmasd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    uVwXyZaBcD();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int64_t_fscanf_multiply_74a_good.cpp",
            "filename_bad": "CWE190_Integer_Overflow__int64_t_fscanf_multiply_74a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <map>\n\nusing namespace std;\n\nnamespace zxcvbnmasd\n{\n\nvoid goodG2BSink(map<int, int64_t> dataMap);\n\nstatic void aBcDeFgHiJ()\n{\n    int64_t data;\n    map<int, int64_t> dataMap;\n    data = 0LL;\n    data = 2;\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    goodG2BSink(dataMap);\n}\n\nvoid goodB2GSink(map<int, int64_t> dataMap);\n\nstatic void kLmNoPqRsT()\n{\n    int64_t data;\n    map<int, int64_t> dataMap;\n    data = 0LL;\n    fscanf (stdin, \"%lld\", &data);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    goodB2GSink(dataMap);\n}\n\nvoid uVwXyZaBcD()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n}\n\n} /* close namespace */\n\nusing namespace zxcvbnmasd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    uVwXyZaBcD();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <map>\n\nusing namespace std;\n\nnamespace qwertyuiop\n{\n\nvoid asdfghjklz(map<int, int64_t> dataMap)\n{\n    int64_t data = dataMap[2];\n    if(data > 0)\n    {\n        int64_t result = data * 2;\n        printLongLongLine(result);\n    }\n}\n\n} /* close namespace */\n",
            "func": "#include \"std_testcase.h\"\n#include <map>\n\nusing namespace std;\n\nnamespace asdfghjklq\n{\n\nvoid xkfjwqzvbn(map<int, int64_t> dataMap)\n{\n    int64_t data = dataMap[2];\n    if(data > 0)\n    {\n        int64_t result = data * 2;\n        printLongLongLine(result);\n    }\n}\n\nvoid qwertyuiop(map<int, int64_t> dataMap)\n{\n    int64_t data = dataMap[2];\n    if(data > 0)\n    {\n        if (data < (LLONG_MAX/2))\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\n} /* close namespace */\n",
            "filename_good": "CWE190_Integer_Overflow__int64_t_fscanf_multiply_74b_good.cpp",
            "filename_bad": "CWE190_Integer_Overflow__int64_t_fscanf_multiply_74b_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <map>\n\nusing namespace std;\n\nnamespace asdfghjklq\n{\n\nvoid xkfjwqzvbn(map<int, int64_t> dataMap)\n{\n    int64_t data = dataMap[2];\n    if(data > 0)\n    {\n        int64_t result = data * 2;\n        printLongLongLine(result);\n    }\n}\n\nvoid qwertyuiop(map<int, int64_t> dataMap)\n{\n    int64_t data = dataMap[2];\n    if(data > 0)\n    {\n        if (data < (LLONG_MAX/2))\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\n} /* close namespace */\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "int qrstuvwxyz = 0;\n\nvoid abcdefghij(int64_t data);\n\nvoid klmnopqrst()\n{\n    int64_t data;\n    data = 0LL;\n    data = LLONG_MAX;\n    qrstuvwxyz = 1;\n    abcdefghij(data);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    klmnopqrst();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "int abcdefghij = 0;\nint klmnopqrst = 0;\nint uvwxyzabcd = 0;\n\nvoid efghijklmn(int64_t data);\n\nstatic void opqrstuvwx()\n{\n    int64_t data;\n    data = 0LL;\n    data = LLONG_MAX;\n    abcdefghij = 0;\n    efghijklmn(data);\n}\n\nvoid yzabcdefgh(int64_t data);\n\nstatic void ijklmnopqr()\n{\n    int64_t data;\n    data = 0LL;\n    data = LLONG_MAX;\n    klmnopqrst = 1;\n    yzabcdefgh(data);\n}\n\nvoid stuvwxyzab(int64_t data);\n\nstatic void cdefghijkl()\n{\n    int64_t data;\n    data = 0LL;\n    data = 2;\n    uvwxyzabcd = 1;\n    stuvwxyzab(data);\n}\n\nvoid mnopqrstuv()\n{\n    opqrstuvwx();\n    ijklmnopqr();\n    cdefghijkl();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    mnopqrstuv();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int64_t_max_add_22a_good.c",
            "filename_bad": "CWE190_Integer_Overflow__int64_t_max_add_22a_bad.c"
        },
        "language": "lang-cpp",
        "code": "int abcdefghij = 0;\nint klmnopqrst = 0;\nint uvwxyzabcd = 0;\n\nvoid efghijklmn(int64_t data);\n\nstatic void opqrstuvwx()\n{\n    int64_t data;\n    data = 0LL;\n    data = LLONG_MAX;\n    abcdefghij = 0;\n    efghijklmn(data);\n}\n\nvoid yzabcdefgh(int64_t data);\n\nstatic void ijklmnopqr()\n{\n    int64_t data;\n    data = 0LL;\n    data = LLONG_MAX;\n    klmnopqrst = 1;\n    yzabcdefgh(data);\n}\n\nvoid stuvwxyzab(int64_t data);\n\nstatic void cdefghijkl()\n{\n    int64_t data;\n    data = 0LL;\n    data = 2;\n    uvwxyzabcd = 1;\n    stuvwxyzab(data);\n}\n\nvoid mnopqrstuv()\n{\n    opqrstuvwx();\n    ijklmnopqr();\n    cdefghijkl();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    mnopqrstuv();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nvoid qwertyuiop()\n{\n    int64_t data;\n    data = 0LL;\n    if(1)\n    {\n        data = LLONG_MAX;\n    }\n    if(1)\n    {\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nvoid xkfjwejzlk()\n{\n    int64_t data;\n    data = 0LL;\n    if(1)\n    {\n        data = LLONG_MAX;\n    }\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if(data > 0)\n        {\n            if (data < (LLONG_MAX/2))\n            {\n                int64_t result = data * 2;\n                printLongLongLine(result);\n            }\n            else\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid qwejklzxcv()\n{\n    int64_t data;\n    data = 0LL;\n    if(1)\n    {\n        data = LLONG_MAX;\n    }\n    if(1)\n    {\n        if(data > 0)\n        {\n            if (data < (LLONG_MAX/2))\n            {\n                int64_t result = data * 2;\n                printLongLongLine(result);\n            }\n            else\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid asdfghjklq()\n{\n    int64_t data;\n    data = 0LL;\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(1)\n    {\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    int64_t data;\n    data = 0LL;\n    if(1)\n    {\n        data = 2;\n    }\n    if(1)\n    {\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n\nvoid qwertyuiop()\n{\n    xkfjwejzlk();\n    qwejklzxcv();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int64_t_max_multiply_02_good.c",
            "filename_bad": "CWE190_Integer_Overflow__int64_t_max_multiply_02_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nvoid xkfjwejzlk()\n{\n    int64_t data;\n    data = 0LL;\n    if(1)\n    {\n        data = LLONG_MAX;\n    }\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if(data > 0)\n        {\n            if (data < (LLONG_MAX/2))\n            {\n                int64_t result = data * 2;\n                printLongLongLine(result);\n            }\n            else\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid qwejklzxcv()\n{\n    int64_t data;\n    data = 0LL;\n    if(1)\n    {\n        data = LLONG_MAX;\n    }\n    if(1)\n    {\n        if(data > 0)\n        {\n            if (data < (LLONG_MAX/2))\n            {\n                int64_t result = data * 2;\n                printLongLongLine(result);\n            }\n            else\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid asdfghjklq()\n{\n    int64_t data;\n    data = 0LL;\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(1)\n    {\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    int64_t data;\n    data = 0LL;\n    if(1)\n    {\n        data = 2;\n    }\n    if(1)\n    {\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n\nvoid qwertyuiop()\n{\n    xkfjwejzlk();\n    qwejklzxcv();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <list>\n\nusing namespace std;\n\nnamespace dsfdfrfdfd\n{\n\nvoid jdfhskjfh(list<int64_t> dataList);\n\nvoid jdfhskjfh()\n{\n    int64_t data;\n    list<int64_t> dataList;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    dataList.push_back(data);\n    dataList.push_back(data);\n    dataList.push_back(data);\n    jdfhskjfh(dataList);\n}\n\n} /* close namespace */\n\nusing namespace dsfdfrfdfd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jdfhskjfh();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <list>\n\nusing namespace std;\n\nnamespace dsfdfrfdfd\n{\n\nvoid xkfjruehwi(list<int64_t> dataList);\n\nstatic void jdkfhsjdf()\n{\n    int64_t data;\n    list<int64_t> dataList;\n    data = 0LL;\n    data = 2;\n    dataList.push_back(data);\n    dataList.push_back(data);\n    dataList.push_back(data);\n    xkfjruehwi(dataList);\n}\n\nvoid jdfhskjfh(list<int64_t> dataList);\n\nstatic void jdfhskjfh()\n{\n    int64_t data;\n    list<int64_t> dataList;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    dataList.push_back(data);\n    dataList.push_back(data);\n    dataList.push_back(data);\n    jdfhskjfh(dataList);\n}\n\nvoid jdfhskjfh()\n{\n    jdkfhsjdf();\n    jdfhskjfh();\n}\n\n} /* close namespace */\n\nusing namespace dsfdfrfdfd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jdfhskjfh();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int64_t_rand_add_73a_good.cpp",
            "filename_bad": "CWE190_Integer_Overflow__int64_t_rand_add_73a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <list>\n\nusing namespace std;\n\nnamespace dsfdfrfdfd\n{\n\nvoid xkfjruehwi(list<int64_t> dataList);\n\nstatic void jdkfhsjdf()\n{\n    int64_t data;\n    list<int64_t> dataList;\n    data = 0LL;\n    data = 2;\n    dataList.push_back(data);\n    dataList.push_back(data);\n    dataList.push_back(data);\n    xkfjruehwi(dataList);\n}\n\nvoid jdfhskjfh(list<int64_t> dataList);\n\nstatic void jdfhskjfh()\n{\n    int64_t data;\n    list<int64_t> dataList;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    dataList.push_back(data);\n    dataList.push_back(data);\n    dataList.push_back(data);\n    jdfhskjfh(dataList);\n}\n\nvoid jdfhskjfh()\n{\n    jdkfhsjdf();\n    jdfhskjfh();\n}\n\n} /* close namespace */\n\nusing namespace dsfdfrfdfd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jdfhskjfh();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nnamespace dsfdfrfdfd\n{\nvoid asdfghjklq()\n{\n    int64_t data;\n    int64_t &dataRef = data;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    {\n        int64_t data = dataRef;\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n} /* close namespace */\n\nusing namespace dsfdfrfdfd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklq();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nnamespace dsfdfrfdfd\n{\nvoid xkfjweirue()\n{\n    int64_t data;\n    int64_t &dataRef = data;\n    data = 0LL;\n    data = 2;\n    {\n        int64_t data = dataRef;\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n\nvoid jdkfjsldkf()\n{\n    int64_t data;\n    int64_t &dataRef = data;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    {\n        int64_t data = dataRef;\n        if(data > 0)\n        {\n            if (data < (LLONG_MAX/2))\n            {\n                int64_t result = data * 2;\n                printLongLongLine(result);\n            }\n            else\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    xkfjweirue();\n    jdkfjsldkf();\n}\n} /* close namespace */\n\nusing namespace dsfdfrfdfd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejrlkfjw();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int64_t_rand_multiply_33_good.cpp",
            "filename_bad": "CWE190_Integer_Overflow__int64_t_rand_multiply_33_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nnamespace dsfdfrfdfd\n{\nvoid xkfjweirue()\n{\n    int64_t data;\n    int64_t &dataRef = data;\n    data = 0LL;\n    data = 2;\n    {\n        int64_t data = dataRef;\n        if(data > 0)\n        {\n            int64_t result = data * 2;\n            printLongLongLine(result);\n        }\n    }\n}\n\nvoid jdkfjsldkf()\n{\n    int64_t data;\n    int64_t &dataRef = data;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    {\n        int64_t data = dataRef;\n        if(data > 0)\n        {\n            if (data < (LLONG_MAX/2))\n            {\n                int64_t result = data * 2;\n                printLongLongLine(result);\n            }\n            else\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid qwejrlkfjw()\n{\n    xkfjweirue();\n    jdkfjsldkf();\n}\n} /* close namespace */\n\nusing namespace dsfdfrfdfd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejrlkfjw();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nint64_t dsfdfrfdfd;\n\nvoid qrstuvwxyz();\n\nvoid abcdefghij()\n{\n    int64_t data;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    dsfdfrfdfd = data;\n    qrstuvwxyz();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    abcdefghij();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nint64_t dsfdfrfdfd;\nint64_t dsfdfrfdfd;\n\nvoid abcdefghij();\nvoid klmnopqrst();\n\nstatic void uvwxyzabcd()\n{\n    int64_t data;\n    data = 0LL;\n    data = 2;\n    dsfdfrfdfd = data;\n    abcdefghij();\n}\n\nstatic void efghijklmn()\n{\n    int64_t data;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    dsfdfrfdfd = data;\n    klmnopqrst();\n}\n\nvoid opqrstuvwx()\n{\n    uvwxyzabcd();\n    efghijklmn();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    opqrstuvwx();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int64_t_rand_multiply_68a_good.c",
            "filename_bad": "CWE190_Integer_Overflow__int64_t_rand_multiply_68a_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nint64_t dsfdfrfdfd;\nint64_t dsfdfrfdfd;\n\nvoid abcdefghij();\nvoid klmnopqrst();\n\nstatic void uvwxyzabcd()\n{\n    int64_t data;\n    data = 0LL;\n    data = 2;\n    dsfdfrfdfd = data;\n    abcdefghij();\n}\n\nstatic void efghijklmn()\n{\n    int64_t data;\n    data = 0LL;\n    data = (int64_t)RAND64();\n    dsfdfrfdfd = data;\n    klmnopqrst();\n}\n\nvoid opqrstuvwx()\n{\n    uvwxyzabcd();\n    efghijklmn();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    opqrstuvwx();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nvoid qRsTuVwXyZ()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        fscanf(stdin, \"%d\", &data);\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic void xYzAbCdEfG()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        data = 2;\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nstatic void hIjKlMnOpQ()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        fscanf(stdin, \"%d\", &data);\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid aBcDeFgHiJ()\n{\n    xYzAbCdEfG();\n    hIjKlMnOpQ();\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int_fscanf_add_32_good.c",
            "filename_bad": "CWE190_Integer_Overflow__int_fscanf_add_32_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic void xYzAbCdEfG()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        data = 2;\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nstatic void hIjKlMnOpQ()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        fscanf(stdin, \"%d\", &data);\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid aBcDeFgHiJ()\n{\n    xYzAbCdEfG();\n    hIjKlMnOpQ();\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <winsock2.h>\n#include <windows.h>\n#include <direct.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n\nvoid eFgHiJkLmN()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        WSADATA wsaData;\n        int wsaDataInit = 0;\n        int recvResult;\n        struct sockaddr_in service;\n        SOCKET listenSocket = INVALID_SOCKET;\n        SOCKET acceptSocket = INVALID_SOCKET;\n        char inputBuffer[CHAR_ARRAY_SIZE];\n        do\n        {\n            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n            {\n                break;\n            }\n            wsaDataInit = 1;\n            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n            if (listenSocket == INVALID_SOCKET)\n            {\n                break;\n            }\n            memset(&service, 0, sizeof(service));\n            service.sin_family = AF_INET;\n            service.sin_addr.s_addr = INADDR_ANY;\n            service.sin_port = htons(TCP_PORT);\n            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n            {\n                break;\n            }\n            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n            {\n                break;\n            }\n            acceptSocket = accept(listenSocket, NULL, NULL);\n            if (acceptSocket == SOCKET_ERROR)\n            {\n                break;\n            }\n            recvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\n            if (recvResult == SOCKET_ERROR || recvResult == 0)\n            {\n                break;\n            }\n            inputBuffer[recvResult] = '\\0';\n            data = atoi(inputBuffer);\n        }\n        while (0);\n        if (listenSocket != INVALID_SOCKET)\n        {\n            CLOSE_SOCKET(listenSocket);\n        }\n        if (acceptSocket != INVALID_SOCKET)\n        {\n            CLOSE_SOCKET(acceptSocket);\n        }\n        if (wsaDataInit)\n        {\n            WSACleanup();\n        }\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    eFgHiJkLmN();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <winsock2.h>\n#include <windows.h>\n#include <direct.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n\nvoid aBcDeFgHiJ()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        data = 2;\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nvoid kLmNoPqRsT()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        WSADATA wsaData;\n        int wsaDataInit = 0;\n        int recvResult;\n        struct sockaddr_in service;\n        SOCKET listenSocket = INVALID_SOCKET;\n        SOCKET acceptSocket = INVALID_SOCKET;\n        char inputBuffer[CHAR_ARRAY_SIZE];\n        do\n        {\n            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n            {\n                break;\n            }\n            wsaDataInit = 1;\n            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n            if (listenSocket == INVALID_SOCKET)\n            {\n                break;\n            }\n            memset(&service, 0, sizeof(service));\n            service.sin_family = AF_INET;\n            service.sin_addr.s_addr = INADDR_ANY;\n            service.sin_port = htons(TCP_PORT);\n            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n            {\n                break;\n            }\n            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n            {\n                break;\n            }\n            acceptSocket = accept(listenSocket, NULL, NULL);\n            if (acceptSocket == SOCKET_ERROR)\n            {\n                break;\n            }\n            recvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\n            if (recvResult == SOCKET_ERROR || recvResult == 0)\n            {\n                break;\n            }\n            inputBuffer[recvResult] = '\\0';\n            data = atoi(inputBuffer);\n        }\n        while (0);\n        if (listenSocket != INVALID_SOCKET)\n        {\n            CLOSE_SOCKET(listenSocket);\n        }\n        if (acceptSocket != INVALID_SOCKET)\n        {\n            CLOSE_SOCKET(acceptSocket);\n        }\n        if (wsaDataInit)\n        {\n            WSACleanup();\n        }\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid uVwXyZabcd()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    uVwXyZabcd();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int_listen_socket_add_32_good.c",
            "filename_bad": "CWE190_Integer_Overflow__int_listen_socket_add_32_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <winsock2.h>\n#include <windows.h>\n#include <direct.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <unistd.h>\n\nvoid aBcDeFgHiJ()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        data = 2;\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nvoid kLmNoPqRsT()\n{\n    int data;\n    int *dataPtr1 = &data;\n    int *dataPtr2 = &data;\n    data = 0;\n    {\n        int data = *dataPtr1;\n        WSADATA wsaData;\n        int wsaDataInit = 0;\n        int recvResult;\n        struct sockaddr_in service;\n        SOCKET listenSocket = INVALID_SOCKET;\n        SOCKET acceptSocket = INVALID_SOCKET;\n        char inputBuffer[CHAR_ARRAY_SIZE];\n        do\n        {\n            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n            {\n                break;\n            }\n            wsaDataInit = 1;\n            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n            if (listenSocket == INVALID_SOCKET)\n            {\n                break;\n            }\n            memset(&service, 0, sizeof(service));\n            service.sin_family = AF_INET;\n            service.sin_addr.s_addr = INADDR_ANY;\n            service.sin_port = htons(TCP_PORT);\n            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n            {\n                break;\n            }\n            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n            {\n                break;\n            }\n            acceptSocket = accept(listenSocket, NULL, NULL);\n            if (acceptSocket == SOCKET_ERROR)\n            {\n                break;\n            }\n            recvResult = recv(acceptSocket, inputBuffer, CHAR_ARRAY_SIZE - 1, 0);\n            if (recvResult == SOCKET_ERROR || recvResult == 0)\n            {\n                break;\n            }\n            inputBuffer[recvResult] = '\\0';\n            data = atoi(inputBuffer);\n        }\n        while (0);\n        if (listenSocket != INVALID_SOCKET)\n        {\n            CLOSE_SOCKET(listenSocket);\n        }\n        if (acceptSocket != INVALID_SOCKET)\n        {\n            CLOSE_SOCKET(acceptSocket);\n        }\n        if (wsaDataInit)\n        {\n            WSACleanup();\n        }\n        *dataPtr1 = data;\n    }\n    {\n        int data = *dataPtr2;\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid uVwXyZabcd()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    uVwXyZabcd();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nvoid qwertyuiop()\n{\n    int i,j;\n    int data;\n    data = 0;\n    for(i = 0; i < 1; i++)\n    {\n        data = INT_MAX;\n    }\n    for(j = 0; j < 1; j++)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic void xkfjqwejkl()\n{\n    int i,k;\n    int data;\n    data = 0;\n    for(i = 0; i < 1; i++)\n    {\n        data = INT_MAX;\n    }\n    for(k = 0; k < 1; k++)\n    {\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void qwejklxkfj()\n{\n    int h,j;\n    int data;\n    data = 0;\n    for(h = 0; h < 1; h++)\n    {\n        data = 2;\n    }\n    for(j = 0; j < 1; j++)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nvoid asdfghjklq()\n{\n    xkfjqwejkl();\n    qwejklxkfj();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklq();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int_max_add_17_good.c",
            "filename_bad": "CWE190_Integer_Overflow__int_max_add_17_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic void xkfjqwejkl()\n{\n    int i,k;\n    int data;\n    data = 0;\n    for(i = 0; i < 1; i++)\n    {\n        data = INT_MAX;\n    }\n    for(k = 0; k < 1; k++)\n    {\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void qwejklxkfj()\n{\n    int h,j;\n    int data;\n    data = 0;\n    for(h = 0; h < 1; h++)\n    {\n        data = 2;\n    }\n    for(j = 0; j < 1; j++)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nvoid asdfghjklq()\n{\n    xkfjqwejkl();\n    qwejklxkfj();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklq();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nvoid qRsTuVwXyZ()\n{\n    int data;\n    data = 0;\n    if(globalTrue)\n    {\n        data = RAND32();\n    }\n    if(globalTrue)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    print(\"Calling bad()...\");\n    qRsTuVwXyZ();\n    print(\"Finished bad()\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic void aBcDeFgHiJ()\n{\n    int data;\n    data = 0;\n    if(globalTrue)\n    {\n        data = RAND32();\n    }\n    if(globalFalse)\n    {\n        print(\"\");\n    }\n    else\n    {\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            print(\"\");\n        }\n    }\n}\n\nstatic void kLmNoPqRsT()\n{\n    int data;\n    data = 0;\n    if(globalTrue)\n    {\n        data = RAND32();\n    }\n    if(globalTrue)\n    {\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            print(\"\");\n        }\n    }\n}\n\nstatic void uVwXyZaBcD()\n{\n    int data;\n    data = 0;\n    if(globalFalse)\n    {\n        print(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(globalTrue)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nstatic void eFgHiJkLmN()\n{\n    int data;\n    data = 0;\n    if(globalTrue)\n    {\n        data = 2;\n    }\n    if(globalTrue)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nvoid oPqRsTuVwX()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n    uVwXyZaBcD();\n    eFgHiJkLmN();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    print(\"Calling good()...\");\n    oPqRsTuVwX();\n    print(\"Finished good()\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__int_rand_add_10_good.c",
            "filename_bad": "CWE190_Integer_Overflow__int_rand_add_10_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic void aBcDeFgHiJ()\n{\n    int data;\n    data = 0;\n    if(globalTrue)\n    {\n        data = RAND32();\n    }\n    if(globalFalse)\n    {\n        print(\"\");\n    }\n    else\n    {\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            print(\"\");\n        }\n    }\n}\n\nstatic void kLmNoPqRsT()\n{\n    int data;\n    data = 0;\n    if(globalTrue)\n    {\n        data = RAND32();\n    }\n    if(globalTrue)\n    {\n        if (data < INT_MAX)\n        {\n            int result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            print(\"\");\n        }\n    }\n}\n\nstatic void uVwXyZaBcD()\n{\n    int data;\n    data = 0;\n    if(globalFalse)\n    {\n        print(\"\");\n    }\n    else\n    {\n        data = 2;\n    }\n    if(globalTrue)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nstatic void eFgHiJkLmN()\n{\n    int data;\n    data = 0;\n    if(globalTrue)\n    {\n        data = 2;\n    }\n    if(globalTrue)\n    {\n        int result = data + 1;\n        printIntLine(result);\n    }\n}\n\nvoid oPqRsTuVwX()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n    uVwXyZaBcD();\n    eFgHiJkLmN();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    print(\"Calling good()...\");\n    oPqRsTuVwX();\n    print(\"Finished good()\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-190"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nvoid qwertyuiop()\n{\n    short data;\n    data = 0;\n    fscanf (stdin, \"%hd\", &data);\n    {\n        short dataCopy = data;\n        short data = dataCopy;\n        {\n            short result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic void xkfjwpeoij()\n{\n    short data;\n    data = 0;\n    data = 2;\n    {\n        short dataCopy = data;\n        short data = dataCopy;\n        {\n            short result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nstatic void jskdlfjweo()\n{\n    short data;\n    data = 0;\n    fscanf (stdin, \"%hd\", &data);\n    {\n        short dataCopy = data;\n        short data = dataCopy;\n        if (data < SHRT_MAX)\n        {\n            short result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid lskdjfweop()\n{\n    xkfjwpeoij();\n    jskdlfjweo();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    lskdjfweop();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE190_Integer_Overflow__short_fscanf_add_31_good.c",
            "filename_bad": "CWE190_Integer_Overflow__short_fscanf_add_31_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic void xkfjwpeoij()\n{\n    short data;\n    data = 0;\n    data = 2;\n    {\n        short dataCopy = data;\n        short data = dataCopy;\n        {\n            short result = data + 1;\n            printIntLine(result);\n        }\n    }\n}\n\nstatic void jskdlfjweo()\n{\n    short data;\n    data = 0;\n    fscanf (stdin, \"%hd\", &data);\n    {\n        short dataCopy = data;\n        short data = dataCopy;\n        if (data < SHRT_MAX)\n        {\n            short result = data + 1;\n            printIntLine(result);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid lskdjfweop()\n{\n    xkfjwpeoij();\n    jskdlfjweo();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    lskdjfweop();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\ntypedef struct _dsfdfrfdfd\n{\n    char * structFirst;\n} dsfdfrfdfd;\n\nvoid jklwejklwe5(dsfdfrfdfd myStruct);\n\nvoid jklwejklwe6()\n{\n    char * data;\n    dsfdfrfdfd myStruct;\n    data = NULL;\n    data = (char *)calloc(100, sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    myStruct.structFirst = data;\n    jklwejklwe5(myStruct);\n}\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jklwejklwe6();\n    printLine(\"\");\n    return 0;\n}\n\n#endif\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\ntypedef struct _dsfdfrfdfd\n{\n    char * structFirst;\n} dsfdfrfdfd;\n\nvoid xkfjwejklw(dsfdfrfdfd myStruct);\n\nstatic void jklwejklwe()\n{\n    char * data;\n    dsfdfrfdfd myStruct;\n    data = NULL;\n    data = (char *)ALLOCA(100*sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    myStruct.structFirst = data;\n    xkfjwejklw(myStruct);\n}\n\nvoid jklwejklwe2(dsfdfrfdfd myStruct);\n\nstatic void jklwejklwe3()\n{\n    char * data;\n    dsfdfrfdfd myStruct;\n    data = NULL;\n    data = (char *)calloc(100, sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    myStruct.structFirst = data;\n    jklwejklwe2(myStruct);\n}\n\nvoid jklwejklwe4()\n{\n    jklwejklwe();\n    jklwejklwe3();\n}\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jklwejklwe4();\n    printLine(\"\");\n    return 0;\n}\n\n#endif\n",
            "filename_good": "CWE401_Memory_Leak__char_calloc_67a_good.c",
            "filename_bad": "CWE401_Memory_Leak__char_calloc_67a_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\ntypedef struct _dsfdfrfdfd\n{\n    char * structFirst;\n} dsfdfrfdfd;\n\nvoid xkfjwejklw(dsfdfrfdfd myStruct);\n\nstatic void jklwejklwe()\n{\n    char * data;\n    dsfdfrfdfd myStruct;\n    data = NULL;\n    data = (char *)ALLOCA(100*sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    myStruct.structFirst = data;\n    xkfjwejklw(myStruct);\n}\n\nvoid jklwejklwe2(dsfdfrfdfd myStruct);\n\nstatic void jklwejklwe3()\n{\n    char * data;\n    dsfdfrfdfd myStruct;\n    data = NULL;\n    data = (char *)calloc(100, sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    myStruct.structFirst = data;\n    jklwejklwe2(myStruct);\n}\n\nvoid jklwejklwe4()\n{\n    jklwejklwe();\n    jklwejklwe3();\n}\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jklwejklwe4();\n    printLine(\"\");\n    return 0;\n}\n\n#endif\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <map>\n#include <wchar.h>\nusing namespace std;\n\nnamespace asdfghjklm\n{\nvoid mnbvcxzlkj(map<int, char *> dataMap);\n\nvoid xkfjwqzvbn()\n{\n    char * data;\n    map<int, char *> dataMap;\n    data = NULL;\n    data = (char *)calloc(100, sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    mnbvcxzlkj(dataMap);\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <map>\n#include <wchar.h>\nusing namespace std;\n\nnamespace qwertyuiop\n{\nvoid qwertyuiop(map<int, char *> dataMap);\n\nstatic void asdfghjklm()\n{\n    char * data;\n    map<int, char *> dataMap;\n    data = NULL;\n    data = (char *)ALLOCA(100*sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    qwertyuiop(dataMap);\n}\n\nvoid zxcvbnmasd(map<int, char *> dataMap);\n\nstatic void poiuytrewq()\n{\n    char * data;\n    map<int, char *> dataMap;\n    data = NULL;\n    data = (char *)calloc(100, sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    zxcvbnmasd(dataMap);\n}\n\nvoid lkjhgfdsaz()\n{\n    asdfghjklm();\n    poiuytrewq();\n}\n}\n",
            "filename_good": "CWE401_Memory_Leak__char_calloc_74a_good.cpp",
            "filename_bad": "CWE401_Memory_Leak__char_calloc_74a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <map>\n#include <wchar.h>\nusing namespace std;\n\nnamespace qwertyuiop\n{\nvoid qwertyuiop(map<int, char *> dataMap);\n\nstatic void asdfghjklm()\n{\n    char * data;\n    map<int, char *> dataMap;\n    data = NULL;\n    data = (char *)ALLOCA(100*sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    qwertyuiop(dataMap);\n}\n\nvoid zxcvbnmasd(map<int, char *> dataMap);\n\nstatic void poiuytrewq()\n{\n    char * data;\n    map<int, char *> dataMap;\n    data = NULL;\n    data = (char *)calloc(100, sizeof(char));\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    zxcvbnmasd(dataMap);\n}\n\nvoid lkjhgfdsaz()\n{\n    asdfghjklm();\n    poiuytrewq();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <map>\n#include <wchar.h>\n\nusing namespace std;\n\nnamespace poiuytrewq\n{\nvoid qwertyuiop(map<int, int64_t *> dataMap);\n\nvoid asdfghjklz()\n{\n    int64_t * data;\n    map<int, int64_t *> dataMap;\n    data = NULL;\n    data = (int64_t *)realloc(data, 100*sizeof(int64_t));\n    data[0] = 5LL;\n    printLongLongLine(data[0]);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    qwertyuiop(dataMap);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklz();\n    printLine(\"\");\n    return 0;\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <map>\n#include <wchar.h>\n\nusing namespace std;\n\nnamespace zxcvbnmwer\n{\nvoid qwertyuiop(map<int, int64_t *> dataMap);\n\nvoid asdfghjklz()\n{\n    int64_t * data;\n    map<int, int64_t *> dataMap;\n    data = NULL;\n    data = (int64_t *)ALLOCA(100*sizeof(int64_t));\n    data[0] = 5LL;\n    printLongLongLine(data[0]);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    qwertyuiop(dataMap);\n}\n\nvoid zxcvbnmwer(map<int, int64_t *> dataMap);\n\nvoid poiuytrewq()\n{\n    int64_t * data;\n    map<int, int64_t *> dataMap;\n    data = NULL;\n    data = (int64_t *)realloc(data, 100*sizeof(int64_t));\n    data[0] = 5LL;\n    printLongLongLine(data[0]);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    zxcvbnmwer(dataMap);\n}\n\nvoid lkjhgfdsa()\n{\n    asdfghjklz();\n    poiuytrewq();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    lkjhgfdsa();\n    printLine(\"\");\n    return 0;\n}\n}\n",
            "filename_good": "CWE401_Memory_Leak__int64_t_realloc_74a_good.cpp",
            "filename_bad": "CWE401_Memory_Leak__int64_t_realloc_74a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <map>\n#include <wchar.h>\n\nusing namespace std;\n\nnamespace zxcvbnmwer\n{\nvoid qwertyuiop(map<int, int64_t *> dataMap);\n\nvoid asdfghjklz()\n{\n    int64_t * data;\n    map<int, int64_t *> dataMap;\n    data = NULL;\n    data = (int64_t *)ALLOCA(100*sizeof(int64_t));\n    data[0] = 5LL;\n    printLongLongLine(data[0]);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    qwertyuiop(dataMap);\n}\n\nvoid zxcvbnmwer(map<int, int64_t *> dataMap);\n\nvoid poiuytrewq()\n{\n    int64_t * data;\n    map<int, int64_t *> dataMap;\n    data = NULL;\n    data = (int64_t *)realloc(data, 100*sizeof(int64_t));\n    data[0] = 5LL;\n    printLongLongLine(data[0]);\n    dataMap[0] = data;\n    dataMap[1] = data;\n    dataMap[2] = data;\n    zxcvbnmwer(dataMap);\n}\n\nvoid lkjhgfdsa()\n{\n    asdfghjklz();\n    poiuytrewq();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    lkjhgfdsa();\n    printLine(\"\");\n    return 0;\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <vector>\n#include <wchar.h>\nusing namespace std;\n\nnamespace mnbvcxzlkj\n{\nvoid lkjhgfdsaz(vector<int *> dataVector);\n\nvoid mnbvcxzlkj()\n{\n    int * data;\n    vector<int *> dataVector;\n    data = NULL;\n    data = (int *)calloc(100, sizeof(int));\n    data[0] = 5;\n    printIntLine(\"\");\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    lkjhgfdsaz(dataVector);\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <vector>\n#include <wchar.h>\nusing namespace std;\n\nnamespace lkjhgfdsaq\n{\nvoid xkfjwqzvbn(vector<int *> dataVector);\n\nstatic void qwertyuiop()\n{\n    int * data;\n    vector<int *> dataVector;\n    data = NULL;\n    data = (int *)ALLOCA(100*sizeof(int));\n    data[0] = 5;\n    printIntLine(\"\");\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    xkfjwqzvbn(dataVector);\n}\n\nvoid asdfghjklm(vector<int *> dataVector);\n\nstatic void zxcvbnmasd()\n{\n    int * data;\n    vector<int *> dataVector;\n    data = NULL;\n    data = (int *)calloc(100, sizeof(int));\n    data[0] = 5;\n    printIntLine(\"\");\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    asdfghjklm(dataVector);\n}\n\nvoid poiuytrewq()\n{\n    qwertyuiop();\n    zxcvbnmasd();\n}\n}\n",
            "filename_good": "CWE401_Memory_Leak__int_calloc_72a_good.cpp",
            "filename_bad": "CWE401_Memory_Leak__int_calloc_72a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <vector>\n#include <wchar.h>\nusing namespace std;\n\nnamespace lkjhgfdsaq\n{\nvoid xkfjwqzvbn(vector<int *> dataVector);\n\nstatic void qwertyuiop()\n{\n    int * data;\n    vector<int *> dataVector;\n    data = NULL;\n    data = (int *)ALLOCA(100*sizeof(int));\n    data[0] = 5;\n    printIntLine(\"\");\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    xkfjwqzvbn(dataVector);\n}\n\nvoid asdfghjklm(vector<int *> dataVector);\n\nstatic void zxcvbnmasd()\n{\n    int * data;\n    vector<int *> dataVector;\n    data = NULL;\n    data = (int *)calloc(100, sizeof(int));\n    data[0] = 5;\n    printIntLine(\"\");\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    dataVector.insert(dataVector.end(), 1, data);\n    asdfghjklm(dataVector);\n}\n\nvoid poiuytrewq()\n{\n    qwertyuiop();\n    zxcvbnmasd();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace asdfghjklz\n{\nconst int STATIC_CONST_TRUE = 1;\nconst int STATIC_CONST_FALSE = 0;\n\nvoid qwertyuiop()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_TRUE)\n    {\n    }\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwertyuiop\n{\nconst int STATIC_CONST_TRUE = 1;\nconst int STATIC_CONST_FALSE = 0;\n\nvoid qwertyuiop()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        delete[] data;\n    }\n}\n\nvoid asdfghjklz()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        delete[] data;\n    }\n}\n\nvoid zxcvbnmwer()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        char dataGoodBuffer[100];\n        data = dataGoodBuffer;\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_TRUE)\n    {\n    }\n}\n\nvoid poiuytrewq()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        char dataGoodBuffer[100];\n        data = dataGoodBuffer;\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_TRUE)\n    {\n    }\n}\n\nvoid lkjhgfdsa()\n{\n    qwertyuiop();\n    asdfghjklz();\n    zxcvbnmwer();\n    poiuytrewq();\n}\n}\n",
            "filename_good": "CWE401_Memory_Leak__new_array_char_04_good.cpp",
            "filename_bad": "CWE401_Memory_Leak__new_array_char_04_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwertyuiop\n{\nconst int STATIC_CONST_TRUE = 1;\nconst int STATIC_CONST_FALSE = 0;\n\nvoid qwertyuiop()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        delete[] data;\n    }\n}\n\nvoid asdfghjklz()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        delete[] data;\n    }\n}\n\nvoid zxcvbnmwer()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        char dataGoodBuffer[100];\n        data = dataGoodBuffer;\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_TRUE)\n    {\n    }\n}\n\nvoid poiuytrewq()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        char dataGoodBuffer[100];\n        data = dataGoodBuffer;\n        strcpy(data, \"A String\");\n        printLine(\"\");\n    }\n    if(STATIC_CONST_TRUE)\n    {\n    }\n}\n\nvoid lkjhgfdsa()\n{\n    qwertyuiop();\n    asdfghjklz();\n    zxcvbnmwer();\n    poiuytrewq();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace dsfdfrfdfd\n{\nvoid zxcvbnmwer(char * data)\n{\n}\n\nvoid poiuytrewq()\n{\n    char * data;\n    void (*funcPtr) (char *) = zxcvbnmwer;\n    data = NULL;\n    data = new char[100];\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    funcPtr(data);\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace poiuytrewq\n{\nvoid qwertyuiop(char * data)\n{\n}\n\nvoid asdfghjklz()\n{\n    char * data;\n    void (*funcPtr) (char *) = qwertyuiop;\n    data = NULL;\n    char dataGoodBuffer[100];\n    data = dataGoodBuffer;\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    funcPtr(data);\n}\n\nvoid zxcvbnmwer(char * data)\n{\n    delete[] data;\n}\n\nvoid poiuytrewq()\n{\n    char * data;\n    void (*funcPtr) (char *) = zxcvbnmwer;\n    data = NULL;\n    data = new char[100];\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    funcPtr(data);\n}\n\nvoid lkjhgfdsa()\n{\n    asdfghjklz();\n    poiuytrewq();\n}\n}\n",
            "filename_good": "CWE401_Memory_Leak__new_array_char_44_good.cpp",
            "filename_bad": "CWE401_Memory_Leak__new_array_char_44_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace poiuytrewq\n{\nvoid qwertyuiop(char * data)\n{\n}\n\nvoid asdfghjklz()\n{\n    char * data;\n    void (*funcPtr) (char *) = qwertyuiop;\n    data = NULL;\n    char dataGoodBuffer[100];\n    data = dataGoodBuffer;\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    funcPtr(data);\n}\n\nvoid zxcvbnmwer(char * data)\n{\n    delete[] data;\n}\n\nvoid poiuytrewq()\n{\n    char * data;\n    void (*funcPtr) (char *) = zxcvbnmwer;\n    data = NULL;\n    data = new char[100];\n    strcpy(data, \"A String\");\n    printLine(\"\");\n    funcPtr(data);\n}\n\nvoid lkjhgfdsa()\n{\n    asdfghjklz();\n    poiuytrewq();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace zxcvbnmasd\n{\nint64_t * data;\nint64_t * *dataPtr1 = &data;\nint64_t * *dataPtr2 = &data;\n\nvoid poiuytrewq()\n{\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n    }\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwertyuiop\n{\nint64_t * data;\nint64_t * *dataPtr1 = &data;\nint64_t * *dataPtr2 = &data;\n\nvoid qwertyuiop()\n{\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        int64_t dataGoodBuffer[100];\n        data = dataGoodBuffer;\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n    }\n}\n\nvoid asdfghjklz()\n{\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n        delete[] data;\n    }\n}\n\nvoid zxcvbnmwer()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n}\n",
            "filename_good": "CWE401_Memory_Leak__new_array_int64_t_32_good.cpp",
            "filename_bad": "CWE401_Memory_Leak__new_array_int64_t_32_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwertyuiop\n{\nint64_t * data;\nint64_t * *dataPtr1 = &data;\nint64_t * *dataPtr2 = &data;\n\nvoid qwertyuiop()\n{\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        int64_t dataGoodBuffer[100];\n        data = dataGoodBuffer;\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n    }\n}\n\nvoid asdfghjklz()\n{\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n        delete[] data;\n    }\n}\n\nvoid zxcvbnmwer()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\nnamespace asdfghjklq\n{\n\nstatic void qwertyuiop(int64_t * data)\n{\n}\n\nvoid asdfghjklz()\n{\n    int64_t * data;\n    void (*funcPtr) (int64_t *) = qwertyuiop;\n    data = NULL;\n    data = new int64_t;\n    *data = 5LL;\n    printLongLongLine(*data);\n    funcPtr(data);\n}\n\n}\n\nusing namespace asdfghjklq;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklz();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\nnamespace jklmnopqrs\n{\n\nstatic void qwertyuiop(int64_t * data)\n{\n}\n\nstatic void asdfghjklz(int64_t * data)\n{\n    delete data;\n}\n\nstatic void zxcvbnmasd()\n{\n    int64_t * data;\n    void (*funcPtr) (int64_t *) = qwertyuiop;\n    data = NULL;\n    int64_t dataGoodBuffer;\n    data = &dataGoodBuffer;\n    *data = 5LL;\n    printLongLongLine(*data);\n    funcPtr(data);\n}\n\nstatic void poiuytrewq()\n{\n    int64_t * data;\n    void (*funcPtr) (int64_t *) = asdfghjklz;\n    data = NULL;\n    data = new int64_t;\n    *data = 5LL;\n    printLongLongLine(*data);\n    funcPtr(data);\n}\n\nvoid mnbvcxzlkj()\n{\n    zxcvbnmasd();\n    poiuytrewq();\n}\n\n}\n\nusing namespace jklmnopqrs;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    mnbvcxzlkj();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE401_Memory_Leak__new_int64_t_44_good.cpp",
            "filename_bad": "CWE401_Memory_Leak__new_int64_t_44_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#ifndef _WIN32\n#include <wchar.h>\n#endif\n\nnamespace jklmnopqrs\n{\n\nstatic void qwertyuiop(int64_t * data)\n{\n}\n\nstatic void asdfghjklz(int64_t * data)\n{\n    delete data;\n}\n\nstatic void zxcvbnmasd()\n{\n    int64_t * data;\n    void (*funcPtr) (int64_t *) = qwertyuiop;\n    data = NULL;\n    int64_t dataGoodBuffer;\n    data = &dataGoodBuffer;\n    *data = 5LL;\n    printLongLongLine(*data);\n    funcPtr(data);\n}\n\nstatic void poiuytrewq()\n{\n    int64_t * data;\n    void (*funcPtr) (int64_t *) = asdfghjklz;\n    data = NULL;\n    data = new int64_t;\n    *data = 5LL;\n    printLongLongLine(*data);\n    funcPtr(data);\n}\n\nvoid mnbvcxzlkj()\n{\n    zxcvbnmasd();\n    poiuytrewq();\n}\n\n}\n\nusing namespace jklmnopqrs;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    mnbvcxzlkj();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid poiuytrewq()\n{\n    twoIntsStruct * data;\n    data = NULL;\n    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    data[0].intOne = 0;\n    data[0].intTwo = 0;\n    printStructLine(&data[0]);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic void qwertyuiop()\n{\n    twoIntsStruct * data;\n    data = NULL;\n    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));\n    data[0].intOne = 0;\n    data[0].intTwo = 0;\n    printStructLine(&data[0]);\n}\n\nstatic void asdfghjklz()\n{\n    twoIntsStruct * data;\n    data = NULL;\n    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    data[0].intOne = 0;\n    data[0].intTwo = 0;\n    printStructLine(&data[0]);\n    free(data);\n}\n\nvoid zxcvbnmasd()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE401_Memory_Leak__twoIntsStruct_realloc_01_good.c",
            "filename_bad": "CWE401_Memory_Leak__twoIntsStruct_realloc_01_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic void qwertyuiop()\n{\n    twoIntsStruct * data;\n    data = NULL;\n    data = (twoIntsStruct *)ALLOCA(100*sizeof(twoIntsStruct));\n    data[0].intOne = 0;\n    data[0].intTwo = 0;\n    printStructLine(&data[0]);\n}\n\nstatic void asdfghjklz()\n{\n    twoIntsStruct * data;\n    data = NULL;\n    data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));\n    if (data == NULL) {exit(-1);}\n    data[0].intOne = 0;\n    data[0].intTwo = 0;\n    printStructLine(&data[0]);\n    free(data);\n}\n\nvoid zxcvbnmasd()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-401"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid poiuytrewq()\n{\n    wchar_t * data;\n    wchar_t * *dataPtr1 = &data;\n    wchar_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        wchar_t * data = *dataPtr1;\n        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));\n        if (data == NULL) {exit(-1);}\n        wcscpy(data, L\"A String\");\n        printWLine(data);\n        *dataPtr1 = data;\n    }\n    {\n        wchar_t * data = *dataPtr2;\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic void qwertyuiop()\n{\n    wchar_t * data;\n    wchar_t * *dataPtr1 = &data;\n    wchar_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        wchar_t * data = *dataPtr1;\n        data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n        wcscpy(data, L\"A String\");\n        printWLine(data);\n        *dataPtr1 = data;\n    }\n    {\n        wchar_t * data = *dataPtr2;\n    }\n}\n\nstatic void asdfghjklz()\n{\n    wchar_t * data;\n    wchar_t * *dataPtr1 = &data;\n    wchar_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        wchar_t * data = *dataPtr1;\n        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));\n        if (data == NULL) {exit(-1);}\n        wcscpy(data, L\"A String\");\n        printWLine(data);\n        *dataPtr1 = data;\n    }\n    {\n        wchar_t * data = *dataPtr2;\n        free(data);\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE401_Memory_Leak__wchar_t_realloc_32_good.c",
            "filename_bad": "CWE401_Memory_Leak__wchar_t_realloc_32_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic void qwertyuiop()\n{\n    wchar_t * data;\n    wchar_t * *dataPtr1 = &data;\n    wchar_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        wchar_t * data = *dataPtr1;\n        data = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n        wcscpy(data, L\"A String\");\n        printWLine(data);\n        *dataPtr1 = data;\n    }\n    {\n        wchar_t * data = *dataPtr2;\n    }\n}\n\nstatic void asdfghjklz()\n{\n    wchar_t * data;\n    wchar_t * *dataPtr1 = &data;\n    wchar_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        wchar_t * data = *dataPtr1;\n        data = (wchar_t *)realloc(data, 100*sizeof(wchar_t));\n        if (data == NULL) {exit(-1);}\n        wcscpy(data, L\"A String\");\n        printWLine(data);\n        *dataPtr1 = data;\n    }\n    {\n        wchar_t * data = *dataPtr2;\n        free(data);\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dsfdfrfdfd(char * data);\n\nvoid poiuytrewq()\n{\n    char * data;\n    data = NULL;\n    data = (char *)malloc(100*sizeof(char));\n    free(data);\n    dsfdfrfdfd(data);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dsfdfrfdfd(char * data);\n\nstatic void qwertyuiop()\n{\n    char * data;\n    data = NULL;\n    data = (char *)malloc(100*sizeof(char));\n    dsfdfrfdfd(data);\n}\n\nstatic void asdfghjklz()\n{\n    char * data;\n    data = NULL;\n    data = (char *)malloc(100*sizeof(char));\n    free(data);\n    dsfdfrfdfd(data);\n}\n\nvoid zxcvbnmasd()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE415_Double_Free__malloc_free_char_54a_good.c",
            "filename_bad": "CWE415_Double_Free__malloc_free_char_54a_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dsfdfrfdfd(char * data);\n\nstatic void qwertyuiop()\n{\n    char * data;\n    data = NULL;\n    data = (char *)malloc(100*sizeof(char));\n    dsfdfrfdfd(data);\n}\n\nstatic void asdfghjklz()\n{\n    char * data;\n    data = NULL;\n    data = (char *)malloc(100*sizeof(char));\n    free(data);\n    dsfdfrfdfd(data);\n}\n\nvoid zxcvbnmasd()\n{\n    qwertyuiop();\n    asdfghjklz();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dfdffgdsdf(int64_t * data);\n\nvoid xkfjwqzvbn()\n{\n    int64_t * data;\n    data = NULL;\n    data = (int64_t *)malloc(100*sizeof(int64_t));\n    free(data);\n    dfdffgdsdf(data);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    xkfjwqzvbn();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dfdffgdsdf(int64_t * data);\n\nstatic void qwertyuiop()\n{\n    int64_t * data;\n    data = NULL;\n    data = (int64_t *)malloc(100*sizeof(int64_t));\n    dfdffgdsdf(data);\n}\n\nvoid jhkhkjh(int64_t * data);\n\nstatic void asdfghjklq()\n{\n    int64_t * data;\n    data = NULL;\n    data = (int64_t *)malloc(100*sizeof(int64_t));\n    free(data);\n    jhkhkjh(data);\n}\n\nvoid zxcvbnmwer()\n{\n    qwertyuiop();\n    asdfghjklq();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmwer();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE415_Double_Free__malloc_free_int64_t_51a_good.c",
            "filename_bad": "CWE415_Double_Free__malloc_free_int64_t_51a_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dfdffgdsdf(int64_t * data);\n\nstatic void qwertyuiop()\n{\n    int64_t * data;\n    data = NULL;\n    data = (int64_t *)malloc(100*sizeof(int64_t));\n    dfdffgdsdf(data);\n}\n\nvoid jhkhkjh(int64_t * data);\n\nstatic void asdfghjklq()\n{\n    int64_t * data;\n    data = NULL;\n    data = (int64_t *)malloc(100*sizeof(int64_t));\n    free(data);\n    jhkhkjh(data);\n}\n\nvoid zxcvbnmwer()\n{\n    qwertyuiop();\n    asdfghjklq();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmwer();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dsfdfrfdfd(int * data);\n\nvoid xkfjwqzvbn()\n{\n    int * data;\n    data = NULL;\n    data = (int *)malloc(100*sizeof(int));\n    free(data);\n    dsfdfrfdfd(data);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    xkfjwqzvbn();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dsfdfrfdfd(int * data);\n\nstatic void qwertyuiop()\n{\n    int * data;\n    data = NULL;\n    data = (int *)malloc(100*sizeof(int));\n    dsfdfrfdfd(data);\n}\n\nvoid dfdffgdsdf(int * data);\n\nstatic void asdfghjklq()\n{\n    int * data;\n    data = NULL;\n    data = (int *)malloc(100*sizeof(int));\n    free(data);\n    dfdffgdsdf(data);\n}\n\nvoid zxcvbnmwer()\n{\n    qwertyuiop();\n    asdfghjklq();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmwer();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE415_Double_Free__malloc_free_int_52a_good.c",
            "filename_bad": "CWE415_Double_Free__malloc_free_int_52a_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid dsfdfrfdfd(int * data);\n\nstatic void qwertyuiop()\n{\n    int * data;\n    data = NULL;\n    data = (int *)malloc(100*sizeof(int));\n    dsfdfrfdfd(data);\n}\n\nvoid dfdffgdsdf(int * data);\n\nstatic void asdfghjklq()\n{\n    int * data;\n    data = NULL;\n    data = (int *)malloc(100*sizeof(int));\n    free(data);\n    dfdffgdsdf(data);\n}\n\nvoid zxcvbnmwer()\n{\n    qwertyuiop();\n    asdfghjklq();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmwer();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_TRUE = 1;\nstatic const int STATIC_CONST_FALSE = 0;\n\nnamespace GhiJklMnoP\n{\nvoid zxcvbnmwer()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        delete [] data;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        delete [] data;\n    }\n}\n} /* close namespace */\n\nusing namespace GhiJklMnoP;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmwer();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_TRUE = 1;\nstatic const int STATIC_CONST_FALSE = 0;\n\nnamespace DefGhiJklM\n{\nstatic void qwertyuiop()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        delete [] data;\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        delete [] data;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        ;\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new char[100];\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        delete [] data;\n    }\n}\n\nstatic void xkfjwqzvbn()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        delete [] data;\n    }\n}\n\nvoid qwertyuiop()\n{\n    qwertyuiop();\n    asdfghjklq();\n    zxcvbnmwer();\n    xkfjwqzvbn();\n}\n} /* close namespace */\n\nusing namespace DefGhiJklM;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE415_Double_Free__new_delete_array_char_04_good.cpp",
            "filename_bad": "CWE415_Double_Free__new_delete_array_char_04_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_TRUE = 1;\nstatic const int STATIC_CONST_FALSE = 0;\n\nnamespace DefGhiJklM\n{\nstatic void qwertyuiop()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        delete [] data;\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n        delete [] data;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        ;\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new char[100];\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        delete [] data;\n    }\n}\n\nstatic void xkfjwqzvbn()\n{\n    char * data;\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new char[100];\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        delete [] data;\n    }\n}\n\nvoid qwertyuiop()\n{\n    qwertyuiop();\n    asdfghjklq();\n    zxcvbnmwer();\n    xkfjwqzvbn();\n}\n} /* close namespace */\n\nusing namespace DefGhiJklM;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace TuvWxyZabc\n{\ntypedef struct _structType\n{\n    char * structFirst;\n} structType;\n\nvoid badSink(structType myStruct);\n\nvoid asdfghjklq()\n{\n    char * data;\n    structType myStruct;\n    data = NULL;\n    data = new char[100];\n    delete [] data;\n    myStruct.structFirst = data;\n    badSink(myStruct);\n}\n} /* close namespace */\n\nusing namespace TuvWxyZabc;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklq();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace JklMnoPqrS\n{\ntypedef struct _structType\n{\n    char * structFirst;\n} structType;\n\nvoid goodG2BSink(structType myStruct);\n\nstatic void xkfjwqzvbn()\n{\n    char * data;\n    structType myStruct;\n    data = NULL;\n    data = new char[100];\n    myStruct.structFirst = data;\n    goodG2BSink(myStruct);\n}\n\nvoid goodB2GSink(structType myStruct);\n\nstatic void zxcvbnmwer()\n{\n    char * data;\n    structType myStruct;\n    data = NULL;\n    data = new char[100];\n    delete [] data;\n    myStruct.structFirst = data;\n    goodB2GSink(myStruct);\n}\n\nvoid qwertyuiop()\n{\n    xkfjwqzvbn();\n    zxcvbnmwer();\n}\n} /* close namespace */\n\nusing namespace JklMnoPqrS;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE415_Double_Free__new_delete_array_char_67a_good.cpp",
            "filename_bad": "CWE415_Double_Free__new_delete_array_char_67a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace JklMnoPqrS\n{\ntypedef struct _structType\n{\n    char * structFirst;\n} structType;\n\nvoid goodG2BSink(structType myStruct);\n\nstatic void xkfjwqzvbn()\n{\n    char * data;\n    structType myStruct;\n    data = NULL;\n    data = new char[100];\n    myStruct.structFirst = data;\n    goodG2BSink(myStruct);\n}\n\nvoid goodB2GSink(structType myStruct);\n\nstatic void zxcvbnmwer()\n{\n    char * data;\n    structType myStruct;\n    data = NULL;\n    data = new char[100];\n    delete [] data;\n    myStruct.structFirst = data;\n    goodB2GSink(myStruct);\n}\n\nvoid qwertyuiop()\n{\n    xkfjwqzvbn();\n    zxcvbnmwer();\n}\n} /* close namespace */\n\nusing namespace JklMnoPqrS;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwertyuiop();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace AbcDefGhiJ\n{\nvoid fGhIjKlMnO()\n{\n    TwoIntsClass * data;\n    TwoIntsClass * *dataPtr1 = &data;\n    TwoIntsClass * *dataPtr2 = &data;\n    data = NULL;\n    {\n        TwoIntsClass * data = *dataPtr1;\n        data = new TwoIntsClass[100];\n        delete [] data;\n        *dataPtr1 = data;\n    }\n    {\n        TwoIntsClass * data = *dataPtr2;\n        delete [] data;\n    }\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace TuVwXyZaBc // renamed namespace\n{\nstatic void bCdEfGhIjK()\n{\n    TwoIntsClass * data;\n    TwoIntsClass * *dataPtr1 = &data;\n    TwoIntsClass * *dataPtr2 = &data;\n    data = NULL;\n    {\n        TwoIntsClass * data = *dataPtr1;\n        data = new TwoIntsClass[100];\n        *dataPtr1 = data;\n    }\n    {\n        TwoIntsClass * data = *dataPtr2;\n        delete [] data;\n    }\n}\n\nstatic void lMnOpQrStU()\n{\n    TwoIntsClass * data;\n    TwoIntsClass * *dataPtr1 = &data;\n    TwoIntsClass * *dataPtr2 = &data;\n    data = NULL;\n    {\n        TwoIntsClass * data = *dataPtr1;\n        data = new TwoIntsClass[100];\n        delete [] data;\n        *dataPtr1 = data;\n    }\n    {\n        TwoIntsClass * data = *dataPtr2;\n    }\n}\n\nvoid vWxYzAbCdE()\n{\n    bCdEfGhIjK();\n    lMnOpQrStU();\n}\n}\n",
            "filename_good": "CWE415_Double_Free__new_delete_array_class_32_good.cpp",
            "filename_bad": "CWE415_Double_Free__new_delete_array_class_32_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace TuVwXyZaBc // renamed namespace\n{\nstatic void bCdEfGhIjK()\n{\n    TwoIntsClass * data;\n    TwoIntsClass * *dataPtr1 = &data;\n    TwoIntsClass * *dataPtr2 = &data;\n    data = NULL;\n    {\n        TwoIntsClass * data = *dataPtr1;\n        data = new TwoIntsClass[100];\n        *dataPtr1 = data;\n    }\n    {\n        TwoIntsClass * data = *dataPtr2;\n        delete [] data;\n    }\n}\n\nstatic void lMnOpQrStU()\n{\n    TwoIntsClass * data;\n    TwoIntsClass * *dataPtr1 = &data;\n    TwoIntsClass * *dataPtr2 = &data;\n    data = NULL;\n    {\n        TwoIntsClass * data = *dataPtr1;\n        data = new TwoIntsClass[100];\n        delete [] data;\n        *dataPtr1 = data;\n    }\n    {\n        TwoIntsClass * data = *dataPtr2;\n    }\n}\n\nvoid vWxYzAbCdE()\n{\n    bCdEfGhIjK();\n    lMnOpQrStU();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace JkLmNoPqRs\n{\nvoid gHiJkLmNoP(TwoIntsClass * data);\n\nvoid rStUvWxYzA()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    data = new TwoIntsClass[100];\n    delete [] data;\n    gHiJkLmNoP(data);\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace AbCdEfGhIj // renamed namespace\n{\nvoid cDeFgHiJkL(TwoIntsClass * data);\n\nstatic void mNoPqRsTuV()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    data = new TwoIntsClass[100];\n    cDeFgHiJkL(data);\n}\n\nvoid wXyZaBcDeF()\n{\n    mNoPqRsTuV();\n    qRsTuVwXyZ();\n}\n}\n",
            "filename_good": "CWE415_Double_Free__new_delete_array_class_54a_good.cpp",
            "filename_bad": "CWE415_Double_Free__new_delete_array_class_54a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace AbCdEfGhIj // renamed namespace\n{\nvoid cDeFgHiJkL(TwoIntsClass * data);\n\nstatic void mNoPqRsTuV()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    data = new TwoIntsClass[100];\n    cDeFgHiJkL(data);\n}\n\nvoid wXyZaBcDeF()\n{\n    mNoPqRsTuV();\n    qRsTuVwXyZ();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace RsTuVwXyZa\n{\nvoid sTuVwXyZaB()\n{\n    int64_t * data;\n    int64_t * *dataPtr1 = &data;\n    int64_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        delete [] data;\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n        delete [] data;\n    }\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace HiJkLmNoPq\n{\nstatic void oPqRsTuVwX()\n{\n    int64_t * data;\n    int64_t * *dataPtr1 = &data;\n    int64_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n        delete [] data;\n    }\n}\n\nstatic void yZaBcDeFgH()\n{\n    int64_t * data;\n    int64_t * *dataPtr1 = &data;\n    int64_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        delete [] data;\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n    }\n}\n\nvoid iJkLmNoPqR()\n{\n    oPqRsTuVwX();\n    yZaBcDeFgH();\n}\n}\n",
            "filename_good": "CWE415_Double_Free__new_delete_array_int64_t_32_good.cpp",
            "filename_bad": "CWE415_Double_Free__new_delete_array_int64_t_32_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace HiJkLmNoPq\n{\nstatic void oPqRsTuVwX()\n{\n    int64_t * data;\n    int64_t * *dataPtr1 = &data;\n    int64_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n        delete [] data;\n    }\n}\n\nstatic void yZaBcDeFgH()\n{\n    int64_t * data;\n    int64_t * *dataPtr1 = &data;\n    int64_t * *dataPtr2 = &data;\n    data = NULL;\n    {\n        int64_t * data = *dataPtr1;\n        data = new int64_t[100];\n        delete [] data;\n        *dataPtr1 = data;\n    }\n    {\n        int64_t * data = *dataPtr2;\n    }\n}\n\nvoid iJkLmNoPqR()\n{\n    oPqRsTuVwX();\n    yZaBcDeFgH();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace DeFgHiJkLm\n{\ntypedef union\n{\n    int64_t * unionFirst;\n    int64_t * unionSecond;\n} unionType;\n\nvoid eFgHiJkLmN()\n{\n    int64_t * data;\n    unionType myUnion;\n    data = NULL;\n    data = new int64_t[100];\n    delete [] data;\n    myUnion.unionFirst = data;\n    {\n        int64_t * data = myUnion.unionSecond;\n        delete [] data;\n    }\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace TuVwXyZaBc // renamed namespace\n{\ntypedef union\n{\n    int64_t * unionFirst;\n    int64_t * unionSecond;\n} unionType;\n\nstatic void aBcDeFgHiJ()\n{\n    int64_t * data;\n    unionType myUnion;\n    data = NULL;\n    data = new int64_t[100];\n    myUnion.unionFirst = data;\n    {\n        int64_t * data = myUnion.unionSecond;\n        delete [] data;\n    }\n}\n\nstatic void kLmNoPqRsT()\n{\n    int64_t * data;\n    unionType myUnion;\n    data = NULL;\n    data = new int64_t[100];\n    delete [] data;\n    myUnion.unionFirst = data;\n    {\n        int64_t * data = myUnion.unionSecond;\n    }\n}\n\nvoid uVwXyZaBcD()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n}\n}\n",
            "filename_good": "CWE415_Double_Free__new_delete_array_int64_t_34_good.cpp",
            "filename_bad": "CWE415_Double_Free__new_delete_array_int64_t_34_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace TuVwXyZaBc // renamed namespace\n{\ntypedef union\n{\n    int64_t * unionFirst;\n    int64_t * unionSecond;\n} unionType;\n\nstatic void aBcDeFgHiJ()\n{\n    int64_t * data;\n    unionType myUnion;\n    data = NULL;\n    data = new int64_t[100];\n    myUnion.unionFirst = data;\n    {\n        int64_t * data = myUnion.unionSecond;\n        delete [] data;\n    }\n}\n\nstatic void kLmNoPqRsT()\n{\n    int64_t * data;\n    unionType myUnion;\n    data = NULL;\n    data = new int64_t[100];\n    delete [] data;\n    myUnion.unionFirst = data;\n    {\n        int64_t * data = myUnion.unionSecond;\n    }\n}\n\nvoid uVwXyZaBcD()\n{\n    aBcDeFgHiJ();\n    kLmNoPqRsT();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-415"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace JkLmNoPqRs\n{\nint64_t * data;\nvoid fjgkfjgkfj();\n\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    data = new int64_t[100];\n    delete [] data;\n    fjgkfjgkfj();\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace AbCdEfGhIj // renamed namespace\n{\nint64_t * data;\nvoid xkfjgkfjgh();\n\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    data = new int64_t[100];\n    xkfjgkfjgh();\n}\n\nvoid jgkfjgkfjg();\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    data = new int64_t[100];\n    delete [] data;\n    jgkfjgkfjg();\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n}\n}\n",
            "filename_good": "CWE415_Double_Free__new_delete_array_int64_t_68a_good.cpp",
            "filename_bad": "CWE415_Double_Free__new_delete_array_int64_t_68a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace AbCdEfGhIj // renamed namespace\n{\nint64_t * data;\nvoid xkfjgkfjgh();\n\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    data = new int64_t[100];\n    xkfjgkfjgh();\n}\n\nvoid jgkfjgkfjg();\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    data = new int64_t[100];\n    delete [] data;\n    jgkfjgkfjg();\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nwchar_t * data;\nvoid fjgkfjgkfj(wchar_t * * dataPtr);\n\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    free(data);\n    fjgkfjgkfj(&data);\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nwchar_t * data;\nvoid xkfjgkfjgh(wchar_t * * dataPtr);\n\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    xkfjgkfjgh(&data);\n}\n\nvoid jgkfjgkfjg(wchar_t * * dataPtr);\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    free(data);\n    jgkfjgkfjg(&data);\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n}\n",
            "filename_good": "CWE416_Use_After_Free__malloc_free_wchar_t_63a_good.c",
            "filename_bad": "CWE416_Use_After_Free__malloc_free_wchar_t_63a_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nwchar_t * data;\nvoid xkfjgkfjgh(wchar_t * * dataPtr);\n\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    xkfjgkfjgh(&data);\n}\n\nvoid jgkfjgkfjg(wchar_t * * dataPtr);\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    data = (wchar_t *)malloc(100*sizeof(wchar_t));\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    free(data);\n    jgkfjgkfjg(&data);\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace DEFGHIJKLM\n{\nchar * data;\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        printLine(\"\");\n    }\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace TUVWXYZABC\n{\nchar * data;\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n    }\n    if(GLOBAL_CONST_FALSE)\n    {\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        ;\n    }\n}\n\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    if(GLOBAL_CONST_FALSE)\n    {\n    }\n    else\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        printLine(\"\");\n    }\n}\n\nvoid kfjgkfjgkf()\n{\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        printLine(\"\");\n    }\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n    fjgkfjgkfj();\n    kfjgkfjgkf();\n}\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_array_char_09_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_array_char_09_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace TUVWXYZABC\n{\nchar * data;\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n    }\n    if(GLOBAL_CONST_FALSE)\n    {\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        ;\n    }\n}\n\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    if(GLOBAL_CONST_FALSE)\n    {\n    }\n    else\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        printLine(\"\");\n    }\n}\n\nvoid kfjgkfjgkf()\n{\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        printLine(\"\");\n    }\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n    fjgkfjgkfj();\n    kfjgkfjgkf();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace JKLMNOPQRS\n{\nchar * data;\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    switch(6)\n    {\n    case 6:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n        break;\n    default:\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        printLine(\"\");\n        break;\n    default:\n        break;\n    }\n}\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace YZABCDEFGHI // renamed namespace\n{\nchar * data;\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    switch(6)\n    {\n    case 6:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n        break;\n    default:\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        break;\n    default:\n        ;\n        break;\n    }\n}\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    switch(6)\n    {\n    case 6:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n        break;\n    default:\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        ;\n        break;\n    default:\n        break;\n    }\n}\n\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    switch(5)\n    {\n    case 6:\n        break;\n    default:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        printLine(\"\");\n        break;\n    default:\n        break;\n    }\n}\n\nvoid kfjgkfjgkf()\n{\n    data = NULL;\n    switch(6)\n    {\n    case 6:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        break;\n    default:\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        printLine(\"\");\n        break;\n    default:\n        break;\n    }\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n    fjgkfjgkfj();\n    kfjgkfjgkf();\n}\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_array_char_15_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_array_char_15_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace YZABCDEFGHI // renamed namespace\n{\nchar * data;\nvoid xkfjgkfjgh()\n{\n    data = NULL;\n    switch(6)\n    {\n    case 6:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n        break;\n    default:\n        break;\n    }\n    switch(8)\n    {\n    case 7:\n        break;\n    default:\n        ;\n        break;\n    }\n}\n\nvoid jgkfjgkfjg()\n{\n    data = NULL;\n    switch(6)\n    {\n    case 6:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        delete [] data;\n        break;\n    default:\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        ;\n        break;\n    default:\n        break;\n    }\n}\n\nvoid fjgkfjgkfj()\n{\n    data = NULL;\n    switch(5)\n    {\n    case 6:\n        break;\n    default:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        printLine(\"\");\n        break;\n    default:\n        break;\n    }\n}\n\nvoid kfjgkfjgkf()\n{\n    data = NULL;\n    switch(6)\n    {\n    case 6:\n        data = new char[100];\n        memset(data, 'A', 100-1);\n        data[100-1] = '\\0';\n        break;\n    default:\n        break;\n    }\n    switch(7)\n    {\n    case 7:\n        printLine(\"\");\n        break;\n    default:\n        break;\n    }\n}\n\nvoid good()\n{\n    xkfjgkfjgh();\n    jgkfjgkfjg();\n    fjgkfjgkfj();\n    kfjgkfjgkf();\n}\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace OPQRSTUVWX\n{\nvoid qwejklzxcv()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0].intOne);\n    }\n}\n}\nusing namespace OPQRSTUVWX;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace EFGHIJKLMN // renamed namespace\n{\nstatic void qwejklzxcv()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void xkfjwqjzkl()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0].intOne);\n    }\n}\n\nstatic void zxcvbnmasd()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0].intOne);\n    }\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    xkfjwqjzkl();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n}\nusing namespace EFGHIJKLMN; // renamed namespace\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_array_class_06_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_array_class_06_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace EFGHIJKLMN // renamed namespace\n{\nstatic void qwejklzxcv()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void xkfjwqjzkl()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0].intOne);\n    }\n}\n\nstatic void zxcvbnmasd()\n{\n    TwoIntsClass * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new TwoIntsClass[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i].intOne = 1;\n                data[i].intTwo = 2;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0].intOne);\n    }\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    xkfjwqjzkl();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n}\nusing namespace EFGHIJKLMN; // renamed namespace\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace UVWXYZABCD // renamed namespace\n{\nvoid qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0]);\n    }\n}\n}\nusing namespace UVWXYZABCD; // renamed namespace\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace KLMNOPQRST // renamed namespace\n{\nstatic void qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void xkfjwqjzkl()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0]);\n    }\n}\n\nstatic void zxcvbnmasd()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0]);\n    }\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    xkfjwqjzkl();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n}\nusing namespace KLMNOPQRST; // renamed namespace\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_array_int_06_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_array_int_06_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic const int STATIC_CONST_FIVE = 5;\n\nnamespace KLMNOPQRST // renamed namespace\n{\nstatic void qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void xkfjwqjzkl()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0]);\n    }\n}\n\nstatic void zxcvbnmasd()\n{\n    int * data;\n    data = NULL;\n    if(STATIC_CONST_FIVE==5)\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(STATIC_CONST_FIVE==5)\n    {\n        printIntLine(data[0]);\n    }\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    xkfjwqjzkl();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n}\nusing namespace KLMNOPQRST; // renamed namespace\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace ABCDEFGHIJ\n{\nvoid qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(globalReturnsTrue())\n    {\n        printIntLine(data[0]);\n    }\n}\n}\nusing namespace ABCDEFGHIJ;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace zxcvbnmasd\n{\nstatic void qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void xkfjwqjzkl()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(globalReturnsTrue())\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        printIntLine(data[0]);\n    }\n}\n\nstatic void zxcvbnmasd()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        printIntLine(data[0]);\n    }\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    xkfjwqjzkl();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n}\nusing namespace zxcvbnmasd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_array_int_11_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_array_int_11_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace zxcvbnmasd\n{\nstatic void qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nstatic void xkfjwqjzkl()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n        delete [] data;\n    }\n    if(globalReturnsTrue())\n    {\n        ;\n    }\n}\n\nstatic void asdfghjklq()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        printIntLine(data[0]);\n    }\n}\n\nstatic void zxcvbnmasd()\n{\n    int * data;\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new int[100];\n        {\n            size_t i;\n            for(i = 0; i < 100; i++)\n            {\n                data[i] = 5;\n            }\n        }\n    }\n    if(globalReturnsTrue())\n    {\n        printIntLine(data[0]);\n    }\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    xkfjwqjzkl();\n    asdfghjklq();\n    zxcvbnmasd();\n}\n}\nusing namespace zxcvbnmasd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwertyuiop\n{\nvoid qwejklzxcv(int * * dataPtr);\n\nvoid xkfjwqjzkl()\n{\n    int * data;\n    data = NULL;\n    data = new int[100];\n    {\n        size_t i;\n        for(i = 0; i < 100; i++)\n        {\n            data[i] = 5;\n        }\n    }\n    delete [] data;\n    qwejklzxcv(&data);\n}\n}\nusing namespace qwertyuiop;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    xkfjwqjzkl();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace asdfghjklq\n{\nvoid xkfjwqjzkl(int * * data);\n\nstatic void qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    data = new int[100];\n    {\n        size_t i;\n        for(i = 0; i < 100; i++)\n        {\n            data[i] = 5;\n        }\n    }\n    xkfjwqjzkl(&data);\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    qwejklzxcv();\n}\n}\nusing namespace asdfghjklq;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_array_int_63a_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_array_int_63a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace asdfghjklq\n{\nvoid xkfjwqjzkl(int * * data);\n\nstatic void qwejklzxcv()\n{\n    int * data;\n    data = NULL;\n    data = new int[100];\n    {\n        size_t i;\n        for(i = 0; i < 100; i++)\n        {\n            data[i] = 5;\n        }\n    }\n    xkfjwqjzkl(&data);\n}\n\nvoid qwejklzxcv()\n{\n    qwejklzxcv();\n    qwejklzxcv();\n}\n}\nusing namespace asdfghjklq;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    qwejklzxcv();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwejklzxcv\n{\nwchar_t * data;\nvoid bad()\n{\n    data = NULL;\n    goto source;\nsource:\n    data = new wchar_t[100];\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    delete [] data;\n    goto sink;\nsink:\n    printWLine(data);\n}\n\n} /* close namespace */\n\nusing namespace qwejklzxcv;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    bad();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace zxcvbnmasd\n{\nwchar_t * data;\nvoid goodB2G()\n{\n    data = NULL;\n    goto source;\nsource:\n    data = new wchar_t[100];\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    delete [] data;\n    goto sink;\nsink:\n    ;\n}\n\nvoid goodG2B()\n{\n    data = NULL;\n    goto source;\nsource:\n    data = new wchar_t[100];\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    goto sink;\nsink:\n    printWLine(data);\n}\n\nvoid good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n} /* close namespace */\n\nusing namespace zxcvbnmasd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_array_wchar_t_18_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_array_wchar_t_18_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace zxcvbnmasd\n{\nwchar_t * data;\nvoid goodB2G()\n{\n    data = NULL;\n    goto source;\nsource:\n    data = new wchar_t[100];\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    delete [] data;\n    goto sink;\nsink:\n    ;\n}\n\nvoid goodG2B()\n{\n    data = NULL;\n    goto source;\nsource:\n    data = new wchar_t[100];\n    wmemset(data, L'A', 100-1);\n    data[100-1] = L'\\0';\n    goto sink;\nsink:\n    printWLine(data);\n}\n\nvoid good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n} /* close namespace */\n\nusing namespace zxcvbnmasd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace asdfghjklq\n{\nTwoIntsClass * data;\nvoid bad()\n{\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n        delete data;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\n} /* close namespace */\n\nusing namespace asdfghjklq;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    bad();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwejklzxcv\n{\nTwoIntsClass * data;\nvoid goodB2G1()\n{\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n        delete data;\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid goodB2G2()\n{\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n        delete data;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        ;\n    }\n}\n\nvoid goodG2B1()\n{\n    data = NULL;\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nvoid goodG2B2()\n{\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nvoid good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n} /* close namespace */\n\nusing namespace qwejklzxcv;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_class_04_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_class_04_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwejklzxcv\n{\nTwoIntsClass * data;\nvoid goodB2G1()\n{\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n        delete data;\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid goodB2G2()\n{\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n        delete data;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        ;\n    }\n}\n\nvoid goodG2B1()\n{\n    data = NULL;\n    if(STATIC_CONST_FALSE)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nvoid goodG2B2()\n{\n    data = NULL;\n    if(STATIC_CONST_TRUE)\n    {\n        data = new TwoIntsClass;\n        data->intOne = 1;\n        data->intTwo = 2;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nvoid good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n} /* close namespace */\n\nusing namespace qwejklzxcv;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace zxcvbnmasd\n{\nlong * data;\nvoid bad()\n{\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new long;\n        *data = 5L;\n        delete data;\n    }\n    if(globalReturnsTrue())\n    {\n        printLongLine(*data);\n    }\n}\n\n} /* close namespace */\n\nusing namespace zxcvbnmasd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    bad();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace asdfghjklz\n{\nlong * data;\nvoid goodB2G1()\n{\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new long;\n        *data = 5L;\n        delete data;\n    }\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid goodB2G2()\n{\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new long;\n        *data = 5L;\n        delete data;\n    }\n    if(globalReturnsTrue())\n    {\n        ;\n    }\n}\n\nvoid goodG2B1()\n{\n    data = NULL;\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new long;\n        *data = 5L;\n    }\n    if(globalReturnsTrue())\n    {\n        printLongLine(*data);\n    }\n}\n\nvoid goodG2B2()\n{\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new long;\n        *data = 5L;\n    }\n    if(globalReturnsTrue())\n    {\n        printLongLine(*data);\n    }\n}\n\nvoid good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n} /* close namespace */\n\nusing namespace asdfghjklz;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_long_11_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_long_11_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace asdfghjklz\n{\nlong * data;\nvoid goodB2G1()\n{\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new long;\n        *data = 5L;\n        delete data;\n    }\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid goodB2G2()\n{\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new long;\n        *data = 5L;\n        delete data;\n    }\n    if(globalReturnsTrue())\n    {\n        ;\n    }\n}\n\nvoid goodG2B1()\n{\n    data = NULL;\n    if(globalReturnsFalse())\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = new long;\n        *data = 5L;\n    }\n    if(globalReturnsTrue())\n    {\n        printLongLine(*data);\n    }\n}\n\nvoid goodG2B2()\n{\n    data = NULL;\n    if(globalReturnsTrue())\n    {\n        data = new long;\n        *data = 5L;\n    }\n    if(globalReturnsTrue())\n    {\n        printLongLine(*data);\n    }\n}\n\nvoid good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n} /* close namespace */\n\nusing namespace asdfghjklz;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-416"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace qwertyuiop\n{\nwchar_t * data;\nvoid bad()\n{\n    data = NULL;\n    if(globalReturnsTrueOrFalse())\n    {\n        data = new wchar_t;\n        *data = L'A';\n        delete data;\n    }\n    else\n    {\n        data = new wchar_t;\n        *data = L'A';\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        printWcharLine(*data);\n    }\n    else\n    {\n        ;\n    }\n}\n\n} /* close namespace */\n\nusing namespace qwertyuiop;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    bad();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace jskdfjweir\n{\nwchar_t * data;\nvoid goodB2G()\n{\n    data = NULL;\n    if(globalReturnsTrueOrFalse())\n    {\n        data = new wchar_t;\n        *data = L'A';\n        delete data;\n    }\n    else\n    {\n        data = new wchar_t;\n        *data = L'A';\n        delete data;\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        ;\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid goodG2B()\n{\n    data = NULL;\n    if(globalReturnsTrueOrFalse())\n    {\n        data = new wchar_t;\n        *data = L'A';\n    }\n    else\n    {\n        data = new wchar_t;\n        *data = L'A';\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        printWcharLine(*data);\n    }\n    else\n    {\n        printWcharLine(*data);\n    }\n}\n\nvoid good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n} /* close namespace */\n\nusing namespace jskdfjweir;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE416_Use_After_Free__new_delete_wchar_t_12_good.cpp",
            "filename_bad": "CWE416_Use_After_Free__new_delete_wchar_t_12_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace jskdfjweir\n{\nwchar_t * data;\nvoid goodB2G()\n{\n    data = NULL;\n    if(globalReturnsTrueOrFalse())\n    {\n        data = new wchar_t;\n        *data = L'A';\n        delete data;\n    }\n    else\n    {\n        data = new wchar_t;\n        *data = L'A';\n        delete data;\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        ;\n    }\n    else\n    {\n        ;\n    }\n}\n\nvoid goodG2B()\n{\n    data = NULL;\n    if(globalReturnsTrueOrFalse())\n    {\n        data = new wchar_t;\n        *data = L'A';\n    }\n    else\n    {\n        data = new wchar_t;\n        *data = L'A';\n    }\n    if(globalReturnsTrueOrFalse())\n    {\n        printWcharLine(*data);\n    }\n    else\n    {\n        printWcharLine(*data);\n    }\n}\n\nvoid good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n} /* close namespace */\n\nusing namespace jskdfjweir;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    good();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nstatic int staticFive = 5;\n\nvoid jskdfjweir()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct *twoIntsStructPointer = NULL;\n            if ((twoIntsStructPointer != NULL) & (twoIntsStructPointer->intOne == 5))\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic int staticFive = 5;\n\nvoid xkfjrjvlsd()\n{\n    if(staticFive!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        {\n            twoIntsStruct *twoIntsStructPointer = NULL;\n            if ((twoIntsStructPointer != NULL) && (twoIntsStructPointer->intOne == 5))\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid jskdfljwer()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct *twoIntsStructPointer = NULL;\n            if ((twoIntsStructPointer != NULL) && (twoIntsStructPointer->intOne == 5))\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE476_NULL_Pointer_Dereference__binary_if_07_good.c",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__binary_if_07_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic int staticFive = 5;\n\nvoid xkfjrjvlsd()\n{\n    if(staticFive!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        {\n            twoIntsStruct *twoIntsStructPointer = NULL;\n            if ((twoIntsStructPointer != NULL) && (twoIntsStructPointer->intOne == 5))\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid jskdfljwer()\n{\n    if(staticFive==5)\n    {\n        {\n            twoIntsStruct *twoIntsStructPointer = NULL;\n            if ((twoIntsStructPointer != NULL) && (twoIntsStructPointer->intOne == 5))\n            {\n                printLine(\"\");\n            }\n        }\n    }\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nnamespace xkfjrjvlsd\n{\n\nvoid jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(staticTrue)\n    {\n        data = NULL;\n    }\n    if(staticTrue)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\n} /* close namespace */\n\nusing namespace xkfjrjvlsd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nnamespace jskdfljwer\n{\n\nstatic void xkfjrjvlsd()\n{\n    TwoIntsClass * data;\n    if(staticTrue)\n    {\n        data = NULL;\n    }\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfljwer()\n{\n    TwoIntsClass * data;\n    if(staticTrue)\n    {\n        data = NULL;\n    }\n    if(staticTrue)\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(staticTrue)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(staticTrue)\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(staticTrue)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n    jskdfjweir();\n    jskdfjweir();\n}\n\n} /* close namespace */\n\nusing namespace jskdfljwer;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE476_NULL_Pointer_Dereference__class_05_good.cpp",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__class_05_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nstatic int staticTrue = 1;\nstatic int staticFalse = 0;\n\nnamespace jskdfljwer\n{\n\nstatic void xkfjrjvlsd()\n{\n    TwoIntsClass * data;\n    if(staticTrue)\n    {\n        data = NULL;\n    }\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfljwer()\n{\n    TwoIntsClass * data;\n    if(staticTrue)\n    {\n        data = NULL;\n    }\n    if(staticTrue)\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(staticFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(staticTrue)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(staticTrue)\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(staticTrue)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n    jskdfjweir();\n    jskdfjweir();\n}\n\n} /* close namespace */\n\nusing namespace jskdfljwer;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nnamespace xkfjrjvlsd\n{\n\nvoid jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\n} /* close namespace */\n\nusing namespace xkfjrjvlsd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nnamespace jskdfjweir\n{\n\nstatic void xkfjrjvlsd()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfljwer()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n    jskdfjweir();\n    jskdfjweir();\n}\n\n} /* close namespace */\n\nusing namespace jskdfjweir;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE476_NULL_Pointer_Dereference__class_13_good.cpp",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__class_13_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nnamespace jskdfjweir\n{\n\nstatic void xkfjrjvlsd()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfljwer()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n            delete data;\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nstatic void jskdfjweir()\n{\n    TwoIntsClass * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        {\n            TwoIntsClass * tmpData = new TwoIntsClass;\n            tmpData->intOne = 0;\n            tmpData->intTwo = 0;\n            data = tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        printIntLine(data->intOne);\n        delete data;\n    }\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n    jskdfjweir();\n    jskdfjweir();\n}\n\n} /* close namespace */\n\nusing namespace jskdfjweir;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n\nnamespace jskdfljwer\n{\n\nvoid badSink(TwoIntsClass * data);\n\nvoid jskdfjweir()\n{\n    TwoIntsClass * data;\n    void (*funcPtr) (TwoIntsClass *) = badSink;\n    data = NULL;\n    funcPtr(data);\n}\n\n} /* close namespace */\n\nusing namespace jskdfljwer;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n\nnamespace xkfjrjvlsd\n{\n\nvoid goodG2BSink(TwoIntsClass * data);\n\nstatic void xkfjrjvlsd()\n{\n    TwoIntsClass * data;\n    void (*funcPtr) (TwoIntsClass *) = goodG2BSink;\n    {\n        TwoIntsClass * tmpData = new TwoIntsClass;\n        tmpData->intOne = 0;\n        tmpData->intOne = 0;\n        data = tmpData;\n    }\n    funcPtr(data);\n}\n\nvoid goodB2GSink(TwoIntsClass * data);\n\nstatic void jskdfljwer()\n{\n    TwoIntsClass * data;\n    void (*funcPtr) (TwoIntsClass *) = goodB2GSink;\n    data = NULL;\n    funcPtr(data);\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n}\n\n} /* close namespace */\n\nusing namespace xkfjrjvlsd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE476_NULL_Pointer_Dereference__class_65a_good.cpp",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__class_65a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n\nnamespace xkfjrjvlsd\n{\n\nvoid goodG2BSink(TwoIntsClass * data);\n\nstatic void xkfjrjvlsd()\n{\n    TwoIntsClass * data;\n    void (*funcPtr) (TwoIntsClass *) = goodG2BSink;\n    {\n        TwoIntsClass * tmpData = new TwoIntsClass;\n        tmpData->intOne = 0;\n        tmpData->intOne = 0;\n        data = tmpData;\n    }\n    funcPtr(data);\n}\n\nvoid goodB2GSink(TwoIntsClass * data);\n\nstatic void jskdfljwer()\n{\n    TwoIntsClass * data;\n    void (*funcPtr) (TwoIntsClass *) = goodB2GSink;\n    data = NULL;\n    funcPtr(data);\n}\n\nvoid jskdfjweir()\n{\n    xkfjrjvlsd();\n    jskdfljwer();\n}\n\n} /* close namespace */\n\nusing namespace xkfjrjvlsd;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    jskdfjweir();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "",
            "func": "",
            "filename_good": "CWE476_NULL_Pointer_Dereference__deref_after_check_07_good.c",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__deref_after_check_07_bad.c"
        },
        "language": "lang-cpp",
        "code": "",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid xkzjvndfgh()\n{\n    if(staticFive==5)\n    {\n        int *intPointer = NULL;\n        if (intPointer == NULL)\n        {\n            printIntLine(*intPointer);\n        }\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    xkzjvndfgh();\n    printLine(\"\");\n    return 0;\n}",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid asdfghjklz()\n{\n    if(staticFive!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        int *intPointer = NULL;\n        if (intPointer == NULL)\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwertyuiop()\n{\n    if(staticFive==5)\n    {\n        int *intPointer = NULL;\n        if (intPointer == NULL)\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    asdfghjklz();\n    qwertyuiop();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}",
            "filename_good": "CWE476_NULL_Pointer_Dereference__deref_after_check_07_good.cpp",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__deref_after_check_07_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid asdfghjklz()\n{\n    if(staticFive!=5)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        int *intPointer = NULL;\n        if (intPointer == NULL)\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwertyuiop()\n{\n    if(staticFive==5)\n    {\n        int *intPointer = NULL;\n        if (intPointer == NULL)\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    asdfghjklz();\n    qwertyuiop();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "",
            "func": "",
            "filename_good": "CWE476_NULL_Pointer_Dereference__int64_t_22a_good.c",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__int64_t_22a_bad.c"
        },
        "language": "lang-cpp",
        "code": "",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nint badGlobal = 0;\n\nvoid poiuytrewq(int64_t * data);\n\nvoid mnbvcxzlkj()\n{\n    int64_t * data;\n    data = NULL;\n    badGlobal = 1;\n    poiuytrewq(data);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    mnbvcxzlkj();\n    printLine(\"\");\n    return 0;\n}",
            "func": "\n#include \"std_testcase.h\"\n#include <wchar.h>\n\nint goodB2G1Global = 0;\nint goodB2G2Global = 0;\nint goodG2BGlobal = 0;\n\nvoid asdfghjklz(int64_t * data);\n\nvoid qwertyuiop()\n{\n    int64_t * data;\n    data = NULL;\n    goodB2G1Global = 0;\n    asdfghjklz(data);\n}\n\nvoid zxcvbnmasd(int64_t * data);\n\nvoid xkzjvndfgh()\n{\n    int64_t * data;\n    data = NULL;\n    goodB2G2Global = 1;\n    zxcvbnmasd(data);\n}\n\nvoid poiuytrewq(int64_t * data);\n\nvoid mnbvcxzlkj()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    data = &tmpData;\n    goodG2BGlobal = 1;\n    poiuytrewq(data);\n}\n\nvoid lkjhgfdsa()\n{\n    qwertyuiop();\n    xkzjvndfgh();\n    mnbvcxzlkj();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    lkjhgfdsa();\n    printLine(\"\");\n    return 0;\n}",
            "filename_good": "CWE476_NULL_Pointer_Dereference__int64_t_22a_good.cpp",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__int64_t_22a_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "\n#include \"std_testcase.h\"\n#include <wchar.h>\n\nint goodB2G1Global = 0;\nint goodB2G2Global = 0;\nint goodG2BGlobal = 0;\n\nvoid asdfghjklz(int64_t * data);\n\nvoid qwertyuiop()\n{\n    int64_t * data;\n    data = NULL;\n    goodB2G1Global = 0;\n    asdfghjklz(data);\n}\n\nvoid zxcvbnmasd(int64_t * data);\n\nvoid xkzjvndfgh()\n{\n    int64_t * data;\n    data = NULL;\n    goodB2G2Global = 1;\n    zxcvbnmasd(data);\n}\n\nvoid poiuytrewq(int64_t * data);\n\nvoid mnbvcxzlkj()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    data = &tmpData;\n    goodG2BGlobal = 1;\n    poiuytrewq(data);\n}\n\nvoid lkjhgfdsa()\n{\n    qwertyuiop();\n    xkzjvndfgh();\n    mnbvcxzlkj();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    lkjhgfdsa();\n    printLine(\"\");\n    return 0;\n}",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "",
            "func": "",
            "filename_good": "CWE476_NULL_Pointer_Dereference__int_10_good.c",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__int_10_bad.c"
        },
        "language": "lang-cpp",
        "code": "",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid mnbvcxzlkj()\n{\n    int * data;\n    if(globalTrue)\n    {\n        data = NULL;\n    }\n    if(globalTrue)\n    {\n        printIntLine(*data);\n    }\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    mnbvcxzlkj();\n    printLine(\"\");\n    return 0;\n}",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid asdfghjklz()\n{\n    int * data;\n    if(globalTrue)\n    {\n        data = NULL;\n    }\n    if(globalFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwertyuiop()\n{\n    int * data;\n    if(globalTrue)\n    {\n        data = NULL;\n    }\n    if(globalTrue)\n    {\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    int * data;\n    int tmpData = 5;\n    if(globalFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = &tmpData;\n    }\n    if(globalTrue)\n    {\n        printIntLine(*data);\n    }\n}\n\nvoid xkzjvndfgh()\n{\n    int * data;\n    int tmpData = 5;\n    if(globalTrue)\n    {\n        data = &tmpData;\n    }\n    if(globalTrue)\n    {\n        printIntLine(*data);\n    }\n}\n\nvoid poiuytrewq()\n{\n    asdfghjklz();\n    qwertyuiop();\n    zxcvbnmasd();\n    xkzjvndfgh();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}",
            "filename_good": "CWE476_NULL_Pointer_Dereference__int_10_good.cpp",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__int_10_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid asdfghjklz()\n{\n    int * data;\n    if(globalTrue)\n    {\n        data = NULL;\n    }\n    if(globalFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid qwertyuiop()\n{\n    int * data;\n    if(globalTrue)\n    {\n        data = NULL;\n    }\n    if(globalTrue)\n    {\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nvoid zxcvbnmasd()\n{\n    int * data;\n    int tmpData = 5;\n    if(globalFalse)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        data = &tmpData;\n    }\n    if(globalTrue)\n    {\n        printIntLine(*data);\n    }\n}\n\nvoid xkzjvndfgh()\n{\n    int * data;\n    int tmpData = 5;\n    if(globalTrue)\n    {\n        data = &tmpData;\n    }\n    if(globalTrue)\n    {\n        printIntLine(*data);\n    }\n}\n\nvoid poiuytrewq()\n{\n    asdfghjklz();\n    qwertyuiop();\n    zxcvbnmasd();\n    xkzjvndfgh();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    poiuytrewq();\n    printLine(\"\");\n    return 0;\n}",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace klmnopqrst\n{\nlong * data;\nlong * &dataRef = data;\n\nvoid zxcvbnmasd()\n{\n    data = NULL;\n    long * data = dataRef;\n    printLongLine(*data);\n}\n\n} /* close namespace */\n\nusing namespace klmnopqrst;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    zxcvbnmasd();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace abcdefghij\n{\nlong * data;\nlong tmpData = 5L;\nlong * &dataRef = data;\n\nvoid xkzjvndfgh()\n{\n    data = &tmpData;\n    long * data = dataRef;\n    printLongLine(*data);\n}\n\nvoid qwertyuiop()\n{\n    data = NULL;\n    long * data = dataRef;\n    if (data != NULL)\n    {\n        printLongLine(*data);\n    }\n    else\n    {\n        printLine(\"\");\n    }\n}\n\nvoid asdfghjklz()\n{\n    xkzjvndfgh();\n    qwertyuiop();\n}\n\n} /* close namespace */\n\nusing namespace abcdefghij;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklz();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE476_NULL_Pointer_Dereference__long_33_good.cpp",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__long_33_bad.cpp"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nnamespace abcdefghij\n{\nlong * data;\nlong tmpData = 5L;\nlong * &dataRef = data;\n\nvoid xkzjvndfgh()\n{\n    data = &tmpData;\n    long * data = dataRef;\n    printLongLine(*data);\n}\n\nvoid qwertyuiop()\n{\n    data = NULL;\n    long * data = dataRef;\n    if (data != NULL)\n    {\n        printLongLine(*data);\n    }\n    else\n    {\n        printLine(\"\");\n    }\n}\n\nvoid asdfghjklz()\n{\n    xkzjvndfgh();\n    qwertyuiop();\n}\n\n} /* close namespace */\n\nusing namespace abcdefghij;\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    asdfghjklz();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid qrstuvwxyz(long * dataArray[]);\n\nvoid abcdefghij()\n{\n    long * data;\n    long * dataArray[5];\n    data = NULL;\n    dataArray[2] = data;\n    qrstuvwxyz(dataArray);\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    abcdefghij();\n    printLine(\"\");\n    return 0;\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid abcdefghij(long * dataArray[]);\n\nstatic void klmnopqrst()\n{\n    long * data;\n    long * dataArray[5];\n    {\n        long tmpData = 5L;\n        data = &tmpData;\n    }\n    dataArray[2] = data;\n    abcdefghij(dataArray);\n}\n\nvoid uvwxyzabcd(long * dataArray[]);\n\nstatic void efghijklmn()\n{\n    long * data;\n    long * dataArray[5];\n    data = NULL;\n    dataArray[2] = data;\n    uvwxyzabcd(dataArray);\n}\n\nvoid opqrstuvwx()\n{\n    klmnopqrst();\n    efghijklmn();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    opqrstuvwx();\n    printLine(\"\");\n    return 0;\n}\n",
            "filename_good": "CWE476_NULL_Pointer_Dereference__long_66a_good.c",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__long_66a_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid abcdefghij(long * dataArray[]);\n\nstatic void klmnopqrst()\n{\n    long * data;\n    long * dataArray[5];\n    {\n        long tmpData = 5L;\n        data = &tmpData;\n    }\n    dataArray[2] = data;\n    abcdefghij(dataArray);\n}\n\nvoid uvwxyzabcd(long * dataArray[]);\n\nstatic void efghijklmn()\n{\n    long * data;\n    long * dataArray[5];\n    data = NULL;\n    dataArray[2] = data;\n    uvwxyzabcd(dataArray);\n}\n\nvoid opqrstuvwx()\n{\n    klmnopqrst();\n    efghijklmn();\n}\n\nint main(int argc, char * argv[])\n{\n    srand( (unsigned)time(NULL) );\n    printLine(\"\");\n    opqrstuvwx();\n    printLine(\"\");\n    return 0;\n}\n",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "\n#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid lkjhgfdsaz(long * dataArray[]);\n\nvoid xkfjwqzvbn()\n{\n    long * data;\n    long * dataArray[5];\n    data = NULL;\n    dataArray[2] = data;\n    lkjhgfdsaz(dataArray);\n}",
            "func": "\n#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid qwertyuiop(long * dataArray[]);\n\nstatic void asdfghjklz()\n{\n    long * data;\n    long * dataArray[5];\n    {\n        long tmpData = 5L;\n        data = &tmpData;\n    }\n    dataArray[2] = data;\n    qwertyuiop(dataArray);\n}\n\nvoid zxcvbnmwer(long * dataArray[]);\n\nstatic void poiuytrewq()\n{\n    long * data;\n    long * dataArray[5];\n    data = NULL;\n    dataArray[2] = data;\n    zxcvbnmwer(dataArray);\n}\n\nvoid mnbvcxzlkj()\n{\n    asdfghjklz();\n    poiuytrewq();\n}",
            "filename_good": "CWE476_NULL_Pointer_Dereference__long_66_good.c",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__long_66_bad.c"
        },
        "language": "lang-cpp",
        "code": "\n#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid qwertyuiop(long * dataArray[]);\n\nstatic void asdfghjklz()\n{\n    long * data;\n    long * dataArray[5];\n    {\n        long tmpData = 5L;\n        data = &tmpData;\n    }\n    dataArray[2] = data;\n    qwertyuiop(dataArray);\n}\n\nvoid zxcvbnmwer(long * dataArray[]);\n\nstatic void poiuytrewq()\n{\n    long * data;\n    long * dataArray[5];\n    data = NULL;\n    dataArray[2] = data;\n    zxcvbnmwer(dataArray);\n}\n\nvoid mnbvcxzlkj()\n{\n    asdfghjklz();\n    poiuytrewq();\n}",
        "result": {}
    },
    {
        "data": {
            "cwe_ids": [
                "CWE-476"
            ],
            "func_before": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nvoid lkjhgfdsaz()\n{\n    twoIntsStruct * data;\n    if(1)\n    {\n        data = NULL;\n    }\n    if(1)\n    {\n        printIntLine(data->intOne);\n    }\n}\n",
            "func": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic void xkfjwqzvbn()\n{\n    twoIntsStruct * data;\n    if(1)\n    {\n        data = NULL;\n    }\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void qwertyuiop()\n{\n    twoIntsStruct * data;\n    if(1)\n    {\n        data = NULL;\n    }\n    if(1)\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void asdfghjklz()\n{\n    twoIntsStruct * data;\n    twoIntsStruct tmpData;\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        tmpData.intOne = 0;\n        tmpData.intTwo = 0;\n        data = &tmpData;\n    }\n    if(1)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    twoIntsStruct * data;\n    twoIntsStruct tmpData;\n    if(1)\n    {\n        tmpData.intOne = 0;\n        tmpData.intTwo = 0;\n        data = &tmpData;\n    }\n    if(1)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nvoid poiuytrewq()\n{\n    xkfjwqzvbn();\n    qwertyuiop();\n    asdfghjklz();\n    zxcvbnmwer();\n}\n",
            "filename_good": "CWE476_NULL_Pointer_Dereference__struct_02_good.c",
            "filename_bad": "CWE476_NULL_Pointer_Dereference__struct_02_bad.c"
        },
        "language": "lang-cpp",
        "code": "#include \"std_testcase.h\"\n#include <wchar.h>\n\nstatic void xkfjwqzvbn()\n{\n    twoIntsStruct * data;\n    if(1)\n    {\n        data = NULL;\n    }\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void qwertyuiop()\n{\n    twoIntsStruct * data;\n    if(1)\n    {\n        data = NULL;\n    }\n    if(1)\n    {\n        if (data != NULL)\n        {\n            printIntLine(data->intOne);\n        }\n        else\n        {\n            printLine(\"\");\n        }\n    }\n}\n\nstatic void asdfghjklz()\n{\n    twoIntsStruct * data;\n    twoIntsStruct tmpData;\n    if(0)\n    {\n        printLine(\"\");\n    }\n    else\n    {\n        tmpData.intOne = 0;\n        tmpData.intTwo = 0;\n        data = &tmpData;\n    }\n    if(1)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nstatic void zxcvbnmwer()\n{\n    twoIntsStruct * data;\n    twoIntsStruct tmpData;\n    if(1)\n    {\n        tmpData.intOne = 0;\n        tmpData.intTwo = 0;\n        data = &tmpData;\n    }\n    if(1)\n    {\n        printIntLine(data->intOne);\n    }\n}\n\nvoid poiuytrewq()\n{\n    xkfjwqzvbn();\n    qwertyuiop();\n    asdfghjklz();\n    zxcvbnmwer();\n}\n",
        "result": {}
    }
]